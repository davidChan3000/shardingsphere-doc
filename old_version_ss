commit 97825a1b5f3d7a36836c0b3a2e5a02238fa85a36
Author: Ling Hengqian <linghengqian@outlook.com>
Date:   Thu Oct 19 22:32:49 2023 +0800

    Updates ElasticJob to 3.0.4 to block CVEs for SnakeYAML delivery (#28805)

diff --git a/docs/document/content/user-manual/shardingsphere-jdbc/yaml-config/jdbc-driver/spring-boot/_index.cn.md b/docs/document/content/user-manual/shardingsphere-jdbc/yaml-config/jdbc-driver/spring-boot/_index.cn.md
index d88b9e8fc9a..db1d1a88bba 100644
--- a/docs/document/content/user-manual/shardingsphere-jdbc/yaml-config/jdbc-driver/spring-boot/_index.cn.md
+++ b/docs/document/content/user-manual/shardingsphere-jdbc/yaml-config/jdbc-driver/spring-boot/_index.cn.md
@@ -40,7 +40,7 @@ spring.datasource.url=jdbc:shardingsphere:classpath:xxx.yaml
 Spring Boot OSS 3 对 Jakarta EE 和 Java 17 进行了 “大爆炸” 升级，涉及大量复杂情况。
 
 对于正在使用 Java EE 8 API 及其实现的 ShardingSphere JDBC 而言，如果用户希望在 Spring Boot OSS 3 等基于 Jakarta EE 9+ API 的 Web 
-Framework 上使用 ShardingSphere JDBC，则需要引入 Java EE 8 的 JAXB 的实现，并指定一个特定的 SnakeYAML 版本。
+Framework 上使用 ShardingSphere JDBC，则需要引入 Java EE 8 的 JAXB 的实现。
 
 这在 Maven 的 `pom.xml` 体现为如下内容。你也可以使用其他的 JAXB API 的实现。此配置同样适用于其他基于 Jakarta EE 的 Web Framework，如 
 Quarkus 3，Micronaut Framework 4 和 Helidon 3。
@@ -53,11 +53,6 @@ Quarkus 3，Micronaut Framework 4 和 Helidon 3。
             <artifactId>shardingsphere-jdbc-core</artifactId>
             <version>${shardingsphere.version}</version>
         </dependency>
-        <dependency>
-            <groupId>org.yaml</groupId>
-            <artifactId>snakeyaml</artifactId>
-            <version>1.33</version>
-        </dependency>
         <dependency>
             <groupId>org.glassfish.jaxb</groupId>
             <artifactId>jaxb-runtime</artifactId>
@@ -67,15 +62,15 @@ Quarkus 3，Micronaut Framework 4 和 Helidon 3。
 </project>
 ```
 
-如果用户是通过 https://start.spring.io/ 创建了 Spring Boot 项目，或者在 `dependencyManagement` 的 XML 标签导入了 
-`org.springframework.boot:spring-boot-dependencies` 的 POM 文件，则可通过如下内容来简化配置。
+此外，ShardingSphere 的 XA 分布式事务尚未在 Spring Boot OSS 3 上就绪。
+
+## 针对低版本的 Spring Boot OSS 2 的特殊处理
+
+ShardingSphere 的所有特性均可在 Spring Boot OSS 2 上使用，但低版本的 Spring Boot OSS 可能需要手动指定 SnakeYAML 的版本为 2.2 。 
+这在 Maven 的 `pom.xml` 体现为如下内容。
 
 ```xml
 <project>
-    <properties>
-        <snakeyaml.version>1.33</snakeyaml.version>
-    </properties>
-    
     <dependencies>
         <dependency>
             <groupId>org.apache.shardingsphere</groupId>
@@ -83,38 +78,28 @@ Quarkus 3，Micronaut Framework 4 和 Helidon 3。
             <version>${shardingsphere.version}</version>
         </dependency>
         <dependency>
-            <groupId>org.glassfish.jaxb</groupId>
-            <artifactId>jaxb-runtime</artifactId>
-            <version>2.3.8</version>
+            <groupId>org.yaml</groupId>
+            <artifactId>snakeyaml</artifactId>
+            <version>2.2</version>
         </dependency>
     </dependencies>
 </project>
 ```
 
-此外，ShardingSphere 的 XA 分布式事务尚未在 Spring Boot OSS 3 上就绪。
-
-## 针对低版本的 Spring Boot OSS 2 的特殊处理
-
-ShardingSphere 的所有特性均可在 Spring Boot OSS 2 上使用，但低版本的 Spring Boot OSS 可能需要手动指定 SnakeYAML 的版本为 1.33 。 
-这在 Maven 的 `pom.xml` 体现为如下内容。
+如果用户是通过 https://start.spring.io/ 创建了 Spring Boot 项目，则可通过如下内容来简化配置。
 
 ```xml
 <project>
+    <properties>
+        <snakeyaml.version>2.2</snakeyaml.version>
+    </properties>
+    
     <dependencies>
         <dependency>
             <groupId>org.apache.shardingsphere</groupId>
             <artifactId>shardingsphere-jdbc-core</artifactId>
             <version>${shardingsphere.version}</version>
         </dependency>
-        <dependency>
-            <groupId>org.yaml</groupId>
-            <artifactId>snakeyaml</artifactId>
-            <version>1.33</version>
-        </dependency>
     </dependencies>
 </project>
 ```
-
-如果用户是通过 https://start.spring.io/ 创建了 Spring Boot 项目，或者在 `dependencyManagement` 的 XML 标签导入了
-`org.springframework.boot:spring-boot-dependencies`的 POM 文件，同样可以选择通过配置 `snakeyaml.version` 的 `properties` 
-来简化内容。
diff --git a/docs/document/content/user-manual/shardingsphere-jdbc/yaml-config/jdbc-driver/spring-boot/_index.en.md b/docs/document/content/user-manual/shardingsphere-jdbc/yaml-config/jdbc-driver/spring-boot/_index.en.md
index 1e57790429a..cadc2364bc9 100644
--- a/docs/document/content/user-manual/shardingsphere-jdbc/yaml-config/jdbc-driver/spring-boot/_index.en.md
+++ b/docs/document/content/user-manual/shardingsphere-jdbc/yaml-config/jdbc-driver/spring-boot/_index.en.md
@@ -41,7 +41,7 @@ Spring Boot OSS 3 has made a "big bang" upgrade to Jakarta EE and Java 17, with
 
 For ShardingSphere JDBC that is using the Java EE 8 API and its implementation, if you want to use ShardingSphere JDBC 
 on a Jakarta EE 9+ API-based web framework such as Spring Boot OSS 3, you need to introduce a JAXB implementation of 
-Java EE 8 and specify a specific version of SnakeYAML.
+Java EE 8.
 
 This is reflected in Maven's `pom.xml` as follows. You can also use other JAXB API implementations. This configuration 
 also applies to other Jakarta EE-based Web Frameworks, such as Quarkus 3, Micronaut Framework 4 and Helidon 3.
@@ -54,11 +54,6 @@ also applies to other Jakarta EE-based Web Frameworks, such as Quarkus 3, Micron
             <artifactId>shardingsphere-jdbc-core</artifactId>
             <version>${shardingsphere.version}</version>
         </dependency>
-        <dependency>
-            <groupId>org.yaml</groupId>
-            <artifactId>snakeyaml</artifactId>
-            <version>1.33</version>
-        </dependency>
         <dependency>
             <groupId>org.glassfish.jaxb</groupId>
             <artifactId>jaxb-runtime</artifactId>
@@ -68,16 +63,16 @@ also applies to other Jakarta EE-based Web Frameworks, such as Quarkus 3, Micron
 </project>
 ```
 
-If the user created the Spring Boot project from https://start.spring.io/, or the `dependencyManagement` XML tag was 
-imported POM file for `org.springframework.boot:spring-boot-dependencies`, users can simplify configuration by 
-following things.
+In addition, ShardingSphere's XA distributed transactions are not yet ready on Spring Boot OSS 3.
+
+## Special handling for earlier versions of Spring Boot OSS 2
+
+All features of ShardingSphere are available on Spring Boot OSS 2, but earlier versions of Spring Boot OSS may require 
+manually specifying version 2.2 for SnakeYAML.
+This is reflected in Maven's `pom.xml` as follows.
 
 ```xml
 <project>
-    <properties>
-        <snakeyaml.version>1.33</snakeyaml.version>
-    </properties>
-    
     <dependencies>
         <dependency>
             <groupId>org.apache.shardingsphere</groupId>
@@ -85,38 +80,29 @@ following things.
             <version>${shardingsphere.version}</version>
         </dependency>
         <dependency>
-            <groupId>org.glassfish.jaxb</groupId>
-            <artifactId>jaxb-runtime</artifactId>
-            <version>2.3.8</version>
+            <groupId>org.yaml</groupId>
+            <artifactId>snakeyaml</artifactId>
+            <version>2.2</version>
         </dependency>
     </dependencies>
 </project>
 ```
 
-In addition, ShardingSphere's XA distributed transactions are not yet ready on Spring Boot OSS 3.
-
-## Special handling for earlier versions of Spring Boot OSS 2
-
-All features of ShardingSphere are available on Spring Boot OSS 2, but earlier versions of Spring Boot OSS may require 
-manually specifying version 1.33 for SnakeYAML.
-This is reflected in Maven's `pom.xml` as follows.
+If the user created the Spring Boot project from https://start.spring.io/, users can simplify configuration by
+following things.
 
 ```xml
 <project>
+    <properties>
+        <snakeyaml.version>2.2</snakeyaml.version>
+    </properties>
+    
     <dependencies>
         <dependency>
             <groupId>org.apache.shardingsphere</groupId>
             <artifactId>shardingsphere-jdbc-core</artifactId>
             <version>${shardingsphere.version}</version>
         </dependency>
-        <dependency>
-            <groupId>org.yaml</groupId>
-            <artifactId>snakeyaml</artifactId>
-            <version>1.33</version>
-        </dependency>
     </dependencies>
 </project>
 ```
-If the user created the Spring Boot project from https://start.spring.io/, or the `dependencyManagement` XML tag was
-imported POM file for `org.springframework.boot:spring-boot-dependencies`, users can also choose to simplify the content
-by configuring `properties` for `snakeyaml.version`.
