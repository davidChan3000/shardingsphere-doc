commit ce4cbadb39b4160e54852a6fe8066133755780c3
Author: LotusMoon <chenyang_ma@aliyun.com>
Date:   Thu Feb 29 10:37:36 2024 +0800

    Adjust parser, rewrite the module positions in the document. (#30314)
    
    * Adjust parser, rewrite the module positions in the document.
    
    * Fix the error in the module

diff --git a/docs/document/content/test-manual/module-test/parser-test.cn.md b/docs/document/content/test-manual/module-test/parser-test.cn.md
index c657857421a..53c34fd4339 100644
--- a/docs/document/content/test-manual/module-test/parser-test.cn.md
+++ b/docs/document/content/test-manual/module-test/parser-test.cn.md
@@ -9,11 +9,11 @@ SQL 解析无需真实的测试环境，开发者只需定义好待测试的 SQL
 
 ### SQL数据
 
-在集成测试的部分提到过 `sql-case-id`，其对应的 SQL，可以在不同模块共享。开发者只需要在 `shardingsphere-sql-parser/shardingsphere-sql-parser-test/src/main/resources/sql/supported/${SQL-TYPE}/*.xml` 添加待测试的 SQL 即可。
+在集成测试的部分提到过 `sql-case-id`，其对应的 SQL，可以在不同模块共享。开发者只需要在`shardingsphere-test-it-parser`模块中添加待测试的 SQL 即可，位置位于`test/it/parser/src/main/resources/sql/supported/${SQL-TYPE}/*.xml` 。
 
 ### 断言数据
 
-断言的解析数据保存在 `shardingsphere-sql-parser/shardingsphere-sql-parser-test/src/main/resources/case/${SQL-TYPE}/*.xml`
+断言的解析数据保存在 `test/it/parser/src/main/resources/case/${SQL-TYPE}/*.xml`
 在 `xml` 文件中，可以针对表名，token，SQL 条件等进行断言，例如如下的配置：
 
 ```xml
@@ -47,4 +47,4 @@ SQL 解析无需真实的测试环境，开发者只需定义好待测试的 SQL
 </parser-result-sets>
 ```
 
-设置好上面两类数据，开发者就可以通过 `shardingsphere-sql-parser/shardingsphere-sql-parser-test` 下对应的测试引擎启动 SQL 解析的测试了。
+设置好上面两类数据，开发者就可以通过 `test/it/parser` 下对应的测试引擎启动 SQL 解析的测试了。
diff --git a/docs/document/content/test-manual/module-test/parser-test.en.md b/docs/document/content/test-manual/module-test/parser-test.en.md
index f53fdae2d5f..3e835c3a338 100644
--- a/docs/document/content/test-manual/module-test/parser-test.en.md
+++ b/docs/document/content/test-manual/module-test/parser-test.en.md
@@ -9,11 +9,11 @@ Not like Integration test, SQL parse test does not need a specific database envi
 
 ### SQL Data
 
-As mentioned `sql-case-id` in Integration test, test-case-id could be shared in different module to test, and the file is at `shardingsphere-sql-parser/shardingsphere-sql-parser-test/src/main/resources/sql/supported/${SQL-TYPE}/*.xml` 
+As mentioned `sql-case-id` in Integration test, test-case-id could be shared in different module to test, and the file is in `shardingsphere-test-it-parser` module, at `test/it/parser/src/main/resources/sql/supported/${SQL-TYPE}/*.xml`
 
 ### Assert Data
 
-The assert data is at `shardingsphere-sql-parser/shardingsphere-sql-parser-test/src/main/resources/case/${SQL-TYPE}/*.xml`
+The assert data is at `test/it/parser/src/main/resources/case/${SQL-TYPE}/*.xml`
 in that xml file, it could assert against the table name, token or sql condition and so on. For example:
 
 ```xml
@@ -47,4 +47,4 @@ in that xml file, it could assert against the table name, token or sql condition
 </parser-result-sets>
 ```
 
-When these configs are ready, launch the test engine in `shardingsphere-sql-parser/shardingsphere-sql-parser-test` to test SQL parse. 
+When these configs are ready, launch the test engine in `test/it/parser` to test SQL parse. 
diff --git a/docs/document/content/test-manual/module-test/rewrite-test.cn.md b/docs/document/content/test-manual/module-test/rewrite-test.cn.md
index 9515cb4f279..9a45bb5ac4e 100644
--- a/docs/document/content/test-manual/module-test/rewrite-test.cn.md
+++ b/docs/document/content/test-manual/module-test/rewrite-test.cn.md
@@ -9,7 +9,7 @@ weight = 2
 
 ### 测试
 
-SQL 改写测试用例位于 `sharding-core/sharding-core-rewrite` 下的 test 中。SQL 改写的测试主要依赖如下几个部分：
+SQL 改写测试用例位于 `test/it/rewriter` 下的 test 中。SQL 改写的测试主要依赖如下几个部分：
 
   - 测试引擎
   - 环境配置
diff --git a/docs/document/content/test-manual/module-test/rewrite-test.en.md b/docs/document/content/test-manual/module-test/rewrite-test.en.md
index b84dcad3185..a3d3a472701 100644
--- a/docs/document/content/test-manual/module-test/rewrite-test.en.md
+++ b/docs/document/content/test-manual/module-test/rewrite-test.en.md
@@ -9,7 +9,7 @@ Facing logic databases and tables cannot be executed directly in actual database
 
 ### Test
 
-The rewrite tests are in the test folder under `sharding-core/sharding-core-rewrite` . Followings are the main part for rewrite tests:
+The rewrite tests are in the test folder under `test/it/rewriter` . Followings are the main part for rewrite tests:
 
   - test engine
   - environment configuration
