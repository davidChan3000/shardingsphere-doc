commit 483788f5f9fe96b395db2dde823ea5d60d855742
Author: Zhengqiang Duan <duanzhengqiang@apache.org>
Date:   Tue Feb 27 16:53:59 2024 +0800

    Update load balance algorithm in dev guide and distsql doc (#30315)

diff --git a/docs/document/content/dev-manual/infra-algorithm.cn.md b/docs/document/content/dev-manual/infra-algorithm.cn.md
new file mode 100644
index 00000000000..7f5b8af668f
--- /dev/null
+++ b/docs/document/content/dev-manual/infra-algorithm.cn.md
@@ -0,0 +1,41 @@
++++
+pre = "<b>5.4. </b>"
+title = "基础算法"
+weight = 4
+chapter = true
++++
+
+## LoadBalanceAlgorithm
+
+### 全限定类名
+
+[`org.apache.shardingsphere.infra.algorithm.load.balancer.core.LoadBalanceAlgorithm`](https://github.com/apache/shardingsphere/blob/master/infra/algorithm/load-balancer/core/src/main/java/org/apache/shardingsphere/infra/algorithm/load/balancer/core/LoadBalanceAlgorithm.java)
+
+### 定义
+
+负载均衡算法，可以使用在读写分离、JDBC 双路由等功能中。
+
+### 已知实现
+
+| *配置标识*      | *详细说明*        | *全限定类名*                                                                                                                                                                                                                                                                                                                              |
+|-------------|---------------|--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|
+| ROUND_ROBIN | 基于轮询的负载均衡算法 | [`org.apache.shardingsphere.infra.algorithm.load.balancer.round.robin.RoundRobinLoadBalanceAlgorithm`](https://github.com/apache/shardingsphere/blob/master/infra/algorithm/load-balancer/type/round-robin/src/main/java/org/apache/shardingsphere/infra/algorithm/load/balancer/round/robin/RoundRobinLoadBalanceAlgorithm.java) |
+| RANDOM      | 基于随机的负载均衡算法 | [`org.apache.shardingsphere.infra.algorithm.load.balancer.random.RandomLoadBalanceAlgorithm`](https://github.com/apache/shardingsphere/blob/master/infra/algorithm/load-balancer/type/random/src/main/java/org/apache/shardingsphere/infra/algorithm/load/balancer/random/RandomLoadBalanceAlgorithm.java)         |
+| WEIGHT      | 基于权重的负载均衡算法 | [`org.apache.shardingsphere.infra.algorithm.load.balancer.weight.WeightLoadBalanceAlgorithm`](https://github.com/apache/shardingsphere/blob/master/infra/algorithm/load-balancer/type/weight/src/main/java/org/apache/shardingsphere/infra/algorithm/load/balancer/weight/WeightLoadBalanceAlgorithm.java)         |
+
+## KeyGenerateAlgorithm
+
+### 全限定类名
+
+[`org.apache.shardingsphere.keygen.core.algorithm.KeyGenerateAlgorithm`](https://github.com/apache/shardingsphere/blob/master/infra/algorithm/key-generator/core/src/main/java/org/apache/shardingsphere/infra/algorithm/keygen/core/KeyGenerateAlgorithm.java)
+
+### 定义
+
+分布式主键生成算法，可以使用在数据分片功能中。
+
+### 已知实现
+
+| *配置标识*       | *详细说明*                      | *全限定类名*                                                                                                                                                                                                                                                                                               |
+|-----------------|--------------------------------|----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|
+| SNOWFLAKE       | 基于雪花算法的分布式主键生成算法    | [`org.apache.shardingsphere.keygen.snowflake.algorithm.SnowflakeKeyGenerateAlgorithm`](https://github.com/apache/shardingsphere/blob/master/infra/algorithm/key-generator/type/snowflake/src/main/java/org/apache/shardingsphere/infra/algorithm/keygen/snowflake/SnowflakeKeyGenerateAlgorithm.java)    |
+| UUID            | 基于 UUID 的分布式主键生成算法     | [`org.apache.shardingsphere.keygen.uuid.algorithm.UUIDKeyGenerateAlgorithm`](https://github.com/apache/shardingsphere/blob/master/infra/algorithm/key-generator/type/uuid/src/main/java/org/apache/shardingsphere/infra/algorithm/keygen/uuid/UUIDKeyGenerateAlgorithm.java)                             |
\ No newline at end of file
diff --git a/docs/document/content/dev-manual/infra-algorithm.en.md b/docs/document/content/dev-manual/infra-algorithm.en.md
new file mode 100644
index 00000000000..06fa2254112
--- /dev/null
+++ b/docs/document/content/dev-manual/infra-algorithm.en.md
@@ -0,0 +1,41 @@
++++
+pre = "<b>5.4. </b>"
+title = "Infra algorithm"
+weight = 4
+chapter = true
++++
+
+## LoadBalanceAlgorithm
+
+### Fully-qualified class name
+
+[`org.apache.shardingsphere.infra.algorithm.load.balancer.core.LoadBalanceAlgorithm`](https://github.com/apache/shardingsphere/blob/master/infra/algorithm/load-balancer/core/src/main/java/org/apache/shardingsphere/infra/algorithm/load/balancer/core/LoadBalanceAlgorithm.java)
+
+### Definition
+
+Load balance algorithms, they can be used in readwrite-splitting and traffic features.
+
+### Implementation classes
+
+| *Configuration Type* | *Description*                                          | *Fully-qualified class name*                                                                                                                                                                                                                                                                                                         |
+|----------------------|--------------------------------------------------------|--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|
+| ROUND_ROBIN          | load balancer algorithm based on polling | [`org.apache.shardingsphere.infra.algorithm.load.balancer.round.robin.RoundRobinLoadBalanceAlgorithm`](https://github.com/apache/shardingsphere/blob/master/infra/algorithm/load-balancer/type/round-robin/src/main/java/org/apache/shardingsphere/infra/algorithm/load/balancer/round/robin/RoundRobinLoadBalanceAlgorithm.java) |
+| RANDOM               | load balancer algorithm based on random | [`org.apache.shardingsphere.infra.algorithm.load.balancer.random.RandomLoadBalanceAlgorithm`](https://github.com/apache/shardingsphere/blob/master/infra/algorithm/load-balancer/type/random/src/main/java/org/apache/shardingsphere/infra/algorithm/load/balancer/random/RandomLoadBalanceAlgorithm.java)         |
+| WEIGHT               | load balancer algorithm based on weight | [`org.apache.shardingsphere.infra.algorithm.load.balancer.weight.WeightLoadBalanceAlgorithm`](https://github.com/apache/shardingsphere/blob/master/infra/algorithm/load-balancer/type/weight/src/main/java/org/apache/shardingsphere/infra/algorithm/load/balancer/weight/WeightLoadBalanceAlgorithm.java)         |
+
+## KeyGenerateAlgorithm
+
+### Fully-qualified class name
+
+[`org.apache.shardingsphere.keygen.core.algorithm.KeyGenerateAlgorithm`](https://github.com/apache/shardingsphere/blob/master/infra/algorithm/key-generator/core/src/main/java/org/apache/shardingsphere/infra/algorithm/keygen/core/KeyGenerateAlgorithm.java)
+
+### Definition
+
+Distributed key generated algorithms, they can be used in sharding feature.
+
+### Implementation classes
+
+| *Configuration Type* | *Description*                    | *Fully-qualified class name*                                                                                                                                                                                                                                                                          |
+|----------------------|----------------------------------|-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|
+| SNOWFLAKE            | Snowflake key generate algorithm | [`org.apache.shardingsphere.keygen.snowflake.algorithm.SnowflakeKeyGenerateAlgorithm`](https://github.com/apache/shardingsphere/blob/master/infra/algorithm/key-generator/type/snowflake/src/main/java/org/apache/shardingsphere/infra/algorithm/keygen/snowflake/SnowflakeKeyGenerateAlgorithm.java) |
+| UUID                 | UUID key generate algorithm      | [`org.apache.shardingsphere.keygen.uuid.algorithm.UUIDKeyGenerateAlgorithm`](https://github.com/apache/shardingsphere/blob/master/infra/algorithm/key-generator/type/uuid/src/main/java/org/apache/shardingsphere/infra/algorithm/keygen/uuid/UUIDKeyGenerateAlgorithm.java)                          |
diff --git a/docs/document/content/dev-manual/readwrite-splitting.cn.md b/docs/document/content/dev-manual/readwrite-splitting.cn.md
deleted file mode 100644
index fc9d25987d0..00000000000
--- a/docs/document/content/dev-manual/readwrite-splitting.cn.md
+++ /dev/null
@@ -1,24 +0,0 @@
-+++
-pre = "<b>5.4. </b>"
-title = "读写分离"
-weight = 4
-chapter = true
-+++
-
-## ReadQueryLoadBalanceAlgorithm
-
-### 全限定类名
-
-[`org.apache.shardingsphere.readwritesplitting.spi.ReadQueryLoadBalanceAlgorithm`](https://github.com/apache/shardingsphere/blob/master/features/readwrite-splitting/api/src/main/java/org/apache/shardingsphere/readwritesplitting/spi/ReadQueryLoadBalanceAlgorithm.java)
-
-### 定义
-
-读库负载均衡算法
-
-### 已知实现
-
-| *配置标识*      | *详细说明*        | *全限定类名*                                                                                                                                                                                                                                                                                                                              |
-|-------------|---------------|--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|
-| ROUND_ROBIN | 基于轮询的读库负载均衡算法 | [`org.apache.shardingsphere.readwritesplitting.algorithm.loadbalance.RoundRobinReadQueryLoadBalanceAlgorithm`](https://github.com/apache/shardingsphere/blob/master/features/readwrite-splitting/core/src/main/java/org/apache/shardingsphere/readwritesplitting/algorithm/loadbalance/RoundRobinReadQueryLoadBalanceAlgorithm.java) |
-| RANDOM      | 基于随机的读库负载均衡算法 | [`org.apache.shardingsphere.readwritesplitting.algorithm.loadbalance.RandomReadQueryLoadBalanceAlgorithm`](https://github.com/apache/shardingsphere/blob/master/features/readwrite-splitting/core/src/main/java/org/apache/shardingsphere/readwritesplitting/algorithm/loadbalance/RandomReadQueryLoadBalanceAlgorithm.java)         |
-| WEIGHT      | 基于权重的读库负载均衡算法 | [`org.apache.shardingsphere.readwritesplitting.algorithm.loadbalance.WeightReadQueryLoadBalanceAlgorithm`](https://github.com/apache/shardingsphere/blob/master/features/readwrite-splitting/core/src/main/java/org/apache/shardingsphere/readwritesplitting/algorithm/loadbalance/WeightReadQueryLoadBalanceAlgorithm.java)         |
diff --git a/docs/document/content/dev-manual/readwrite-splitting.en.md b/docs/document/content/dev-manual/readwrite-splitting.en.md
deleted file mode 100644
index 2861ae07eab..00000000000
--- a/docs/document/content/dev-manual/readwrite-splitting.en.md
+++ /dev/null
@@ -1,24 +0,0 @@
-+++
-pre = "<b>5.4. </b>"
-title = "Readwrite-splitting"
-weight = 4
-chapter = true
-+++
-
-## ReadQueryLoadBalanceAlgorithm
-
-### Fully-qualified class name
-
-[`org.apache.shardingsphere.readwritesplitting.spi.ReadQueryLoadBalanceAlgorithm`](https://github.com/apache/shardingsphere/blob/master/features/readwrite-splitting/api/src/main/java/org/apache/shardingsphere/readwritesplitting/spi/ReadQueryLoadBalanceAlgorithm.java)
-
-### Definition
-
-Read query load balance algorithm's definition
-
-### Implementation classes
-
-| *Configuration Type* | *Description*                                              | *Fully-qualified class name*                                                                                                                                                                                                                                                                                                         |
-|----------------------|------------------------------------------------------------|--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|
-| ROUND_ROBIN          | the read database load balancer algorithm based on polling | [`org.apache.shardingsphere.readwritesplitting.algorithm.loadbalance.RoundRobinReadQueryLoadBalanceAlgorithm`](https://github.com/apache/shardingsphere/blob/master/features/readwrite-splitting/core/src/main/java/org/apache/shardingsphere/readwritesplitting/algorithm/loadbalance/RoundRobinReadQueryLoadBalanceAlgorithm.java) |
-| RANDOM               | the read database load balancer algorithm based on random  | [`org.apache.shardingsphere.readwritesplitting.algorithm.loadbalance.RandomReadQueryLoadBalanceAlgorithm`](https://github.com/apache/shardingsphere/blob/master/features/readwrite-splitting/core/src/main/java/org/apache/shardingsphere/readwritesplitting/algorithm/loadbalance/RandomReadQueryLoadBalanceAlgorithm.java)         |
-| WEIGHT               | the read database load balancer algorithm based on weight  | [`org.apache.shardingsphere.readwritesplitting.algorithm.loadbalance.WeightReadQueryLoadBalanceAlgorithm`](https://github.com/apache/shardingsphere/blob/master/features/readwrite-splitting/core/src/main/java/org/apache/shardingsphere/readwritesplitting/algorithm/loadbalance/WeightReadQueryLoadBalanceAlgorithm.java)         |
diff --git a/docs/document/content/dev-manual/sharding.cn.md b/docs/document/content/dev-manual/sharding.cn.md
index fb9ac950084..37c8e0f407c 100644
--- a/docs/document/content/dev-manual/sharding.cn.md
+++ b/docs/document/content/dev-manual/sharding.cn.md
@@ -30,23 +30,6 @@ chapter = true
 | COMPLEX_INLINE           | N        | 基于行表达式的复合分片算法             | [`org.apache.shardingsphere.sharding.algorithm.sharding.complex.ComplexInlineShardingAlgorithm`](https://github.com/apache/shardingsphere/blob/master/features/sharding/core/src/main/java/org/apache/shardingsphere/sharding/algorithm/sharding/inline/ComplexInlineShardingAlgorithm.java)                                          |
 | HINT_INLINE              | N        | 基于行表达式的 Hint 分片算法         | [`org.apache.shardingsphere.sharding.algorithm.sharding.hint.HintInlineShardingAlgorithm`](https://github.com/apache/shardingsphere/blob/master/features/sharding/core/src/main/java/org/apache/shardingsphere/sharding/algorithm/sharding/hint/HintInlineShardingAlgorithm.java)                                                     |
 
-## KeyGenerateAlgorithm
-
-### 全限定类名
-
-[`org.apache.shardingsphere.keygen.core.algorithm.KeyGenerateAlgorithm`](https://github.com/apache/shardingsphere/blob/master/infra/algorithm/key-generator/core/src/main/java/org/apache/shardingsphere/infra/algorithm/keygen/core/KeyGenerateAlgorithm.java)
-
-### 定义
-
-分布式主键生成算法
-
-### 已知实现
-
-| *配置标识*       | *详细说明*                      | *全限定类名*                                                                                                                                                                                                                                                                                               |
-|-----------------|--------------------------------|----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|
-| SNOWFLAKE       | 基于雪花算法的分布式主键生成算法    | [`org.apache.shardingsphere.keygen.snowflake.algorithm.SnowflakeKeyGenerateAlgorithm`](https://github.com/apache/shardingsphere/blob/master/infra/algorithm/key-generator/type/snowflake/src/main/java/org/apache/shardingsphere/infra/algorithm/keygen/snowflake/SnowflakeKeyGenerateAlgorithm.java)    |
-| UUID            | 基于 UUID 的分布式主键生成算法     | [`org.apache.shardingsphere.keygen.uuid.algorithm.UUIDKeyGenerateAlgorithm`](https://github.com/apache/shardingsphere/blob/master/infra/algorithm/key-generator/type/uuid/src/main/java/org/apache/shardingsphere/infra/algorithm/keygen/uuid/UUIDKeyGenerateAlgorithm.java)                             |
-
 ## ShardingAuditAlgorithm
 
 ### 全限定类名
diff --git a/docs/document/content/dev-manual/sharding.en.md b/docs/document/content/dev-manual/sharding.en.md
index dd85c00cdcc..ae313a0651a 100644
--- a/docs/document/content/dev-manual/sharding.en.md
+++ b/docs/document/content/dev-manual/sharding.en.md
@@ -30,23 +30,6 @@ Sharding Algorithm definition
 | COMPLEX_INLINE           | N                    | Complex inline sharding algorithm                                       | [`org.apache.shardingsphere.sharding.algorithm.sharding.complex.ComplexInlineShardingAlgorithm`](https://github.com/apache/shardingsphere/blob/master/features/sharding/core/src/main/java/org/apache/shardingsphere/sharding/algorithm/sharding/inline/ComplexInlineShardingAlgorithm.java)                                          |
 | HINT_INLINE              | N                    | Hint inline sharding algorithm                                          | [`org.apache.shardingsphere.sharding.algorithm.sharding.hint.HintInlineShardingAlgorithm`](https://github.com/apache/shardingsphere/blob/master/features/sharding/core/src/main/java/org/apache/shardingsphere/sharding/algorithm/sharding/hint/HintInlineShardingAlgorithm.java)                                                     |
 
-## KeyGenerateAlgorithm
-
-### Fully-qualified class name
-
-[`org.apache.shardingsphere.keygen.core.algorithm.KeyGenerateAlgorithm`](https://github.com/apache/shardingsphere/blob/master/infra/algorithm/key-generator/core/src/main/java/org/apache/shardingsphere/infra/algorithm/keygen/core/KeyGenerateAlgorithm.java)
-
-### Definition
-
-Distributed Key Generating Algorithm definition
-
-### Implementation classes
-
-| *Configuration Type* | *Description*                    | *Fully-qualified class name*                                                                                                                                                                                                                                                                          |
-|----------------------|----------------------------------|-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|
-| SNOWFLAKE            | Snowflake key generate algorithm | [`org.apache.shardingsphere.keygen.snowflake.algorithm.SnowflakeKeyGenerateAlgorithm`](https://github.com/apache/shardingsphere/blob/master/infra/algorithm/key-generator/type/snowflake/src/main/java/org/apache/shardingsphere/infra/algorithm/keygen/snowflake/SnowflakeKeyGenerateAlgorithm.java) |
-| UUID                 | UUID key generate algorithm      | [`org.apache.shardingsphere.keygen.uuid.algorithm.UUIDKeyGenerateAlgorithm`](https://github.com/apache/shardingsphere/blob/master/infra/algorithm/key-generator/type/uuid/src/main/java/org/apache/shardingsphere/infra/algorithm/keygen/uuid/UUIDKeyGenerateAlgorithm.java)                          |
-
 ## ShardingAuditAlgorithm
 
 ### Fully-qualified class name
diff --git a/docs/document/content/user-manual/shardingsphere-proxy/distsql/syntax/ral/plugin/show-plugins.cn.md b/docs/document/content/user-manual/shardingsphere-proxy/distsql/syntax/ral/plugin/show-plugins.cn.md
index ef26448207a..33ad6885765 100644
--- a/docs/document/content/user-manual/shardingsphere-proxy/distsql/syntax/ral/plugin/show-plugins.cn.md
+++ b/docs/document/content/user-manual/shardingsphere-proxy/distsql/syntax/ral/plugin/show-plugins.cn.md
@@ -64,7 +64,7 @@ SHOW PLUGINS OF 'org.apache.shardingsphere.sharding.spi.ShardingAlgorithm';
 针对一些常用的接口，ShardingSphere 提供了语法糖，可以简化操作，目前已提供的插件查询语法糖如下：
 
 - 查询 `org.apache.shardingsphere.sharding.spi.ShardingAlgorithm` 接口实现：[SHOW SHARDING ALGORITHM PLUGINS](/cn/user-manual/shardingsphere-proxy/distsql/syntax/ral/show-implementation/sharding/show-sharding-algorithm-implementations)
-- 查询 `org.apache.shardingsphere.readwritesplitting.spi.ReadQueryLoadBalanceAlgorithm` 接口实现：[SHOW READ QUERY LOAD BALANCE ALGORITHM PLUGINS](/cn/user-manual/shardingsphere-proxy/distsql/syntax/ral/show-implementation/readwrite-splitting/show-read-query-load-balance-algorithm-implementations)
+- 查询 `org.apache.shardingsphere.infra.algorithm.load.balancer.core.LoadBalanceAlgorithm` 接口实现：[SHOW READ QUERY LOAD BALANCE ALGORITHM PLUGINS](/cn/user-manual/shardingsphere-proxy/distsql/syntax/ral/show-implementation/readwrite-splitting/show-read-query-load-balance-algorithm-implementations)
 - 查询 `org.apache.shardingsphere.encrypt.spi.EncryptAlgorithm` 接口实现：[SHOW ENCRYPT ALGORITHM PLUGINS](/cn/user-manual/shardingsphere-proxy/distsql/syntax/ral/show-implementation/encrypt/show-encrypt-algorithm-implementations)
 - 查询 `org.apache.shardingsphere.mask.spi.MaskAlgorithm` 接口实现：[SHOW MASK ALGORITHM PLUGINS](/cn/user-manual/shardingsphere-proxy/distsql/syntax/ral/show-implementation/mask/show-mask-algorithm-implementations)
 - 查询 `org.apache.shardingsphere.shadow.spi.ShadowAlgorithm` 接口实现：[SHOW SHADOW ALGORITHM PLUGINS](/cn/user-manual/shardingsphere-proxy/distsql/syntax/ral/show-implementation/shadow/show-shadow-algorithm-implementations)
diff --git a/docs/document/content/user-manual/shardingsphere-proxy/distsql/syntax/ral/plugin/show-plugins.en.md b/docs/document/content/user-manual/shardingsphere-proxy/distsql/syntax/ral/plugin/show-plugins.en.md
index e3ed6795679..69117a2dfdd 100644
--- a/docs/document/content/user-manual/shardingsphere-proxy/distsql/syntax/ral/plugin/show-plugins.en.md
+++ b/docs/document/content/user-manual/shardingsphere-proxy/distsql/syntax/ral/plugin/show-plugins.en.md
@@ -66,7 +66,7 @@ For some commonly used interface implementations, ShardingSphere provides syntax
 The currently provided syntax sugar are as follows:
 
 - Show implementations of `org.apache.shardingsphere.sharding.spi.ShardingAlgorithm`: [SHOW SHARDING ALGORITHM PLUGINS](/cn/user-manual/shardingsphere-proxy/distsql/syntax/ral/show-implementation/sharding/show-sharding-algorithm-implementations)
-- Show implementations of  `org.apache.shardingsphere.readwritesplitting.spi.ReadQueryLoadBalanceAlgorithm`: [SHOW READ QUERY LOAD BALANCE ALGORITHM PLUGINS](/cn/user-manual/shardingsphere-proxy/distsql/syntax/ral/show-implementation/readwrite-splitting/show-read-query-load-balance-algorithm-implementations)
+- Show implementations of  `org.apache.shardingsphere.infra.algorithm.load.balancer.core.LoadBalanceAlgorithm`: [SHOW READ QUERY LOAD BALANCE ALGORITHM PLUGINS](/cn/user-manual/shardingsphere-proxy/distsql/syntax/ral/show-implementation/readwrite-splitting/show-read-query-load-balance-algorithm-implementations)
 - Show implementations of  `org.apache.shardingsphere.encrypt.spi.EncryptAlgorithm`: [SHOW ENCRYPT ALGORITHM PLUGINS](/cn/user-manual/shardingsphere-proxy/distsql/syntax/ral/show-implementation/encrypt/show-encrypt-algorithm-implementations)
 - Show implementations of  `org.apache.shardingsphere.mask.spi.MaskAlgorithm`: [SHOW MASK ALGORITHM PLUGINS](/cn/user-manual/shardingsphere-proxy/distsql/syntax/ral/show-implementation/mask/show-mask-algorithm-implementations)
 - Show implementations of  `org.apache.shardingsphere.shadow.spi.ShadowAlgorithm`: [SHOW SHADOW ALGORITHM PLUGINS](/cn/user-manual/shardingsphere-proxy/distsql/syntax/ral/show-implementation/shadow/show-shadow-algorithm-implementations)
diff --git a/docs/document/content/user-manual/shardingsphere-proxy/distsql/syntax/ral/plugin/show-read-query-load-balance-algorithm-plugins.cn.md b/docs/document/content/user-manual/shardingsphere-proxy/distsql/syntax/ral/plugin/show-read-query-load-balance-algorithm-plugins.cn.md
index d28557174ea..63b037eec38 100644
--- a/docs/document/content/user-manual/shardingsphere-proxy/distsql/syntax/ral/plugin/show-read-query-load-balance-algorithm-plugins.cn.md
+++ b/docs/document/content/user-manual/shardingsphere-proxy/distsql/syntax/ral/plugin/show-read-query-load-balance-algorithm-plugins.cn.md
@@ -5,7 +5,7 @@ weight = 3
 
 ### 描述
 
-`SHOW READ QUERY LOAD BALANCE ALGORITHM PLUGINS` 语法用于查询 `org.apache.shardingsphere.readwritesplitting.spi.ReadQueryLoadBalanceAlgorithm` 接口的所有实现类。
+`SHOW READ QUERY LOAD BALANCE ALGORITHM PLUGINS` 语法用于查询 `org.apache.shardingsphere.infra.algorithm.load.balancer.core.LoadBalanceAlgorithm` 接口的所有实现类。
 
 ### 语法
 
@@ -31,7 +31,7 @@ showReadQueryLoadBalanceAlgorithmPlugins ::=
 
 ### 示例
 
-- 查询 `org.apache.shardingsphere.readwritesplitting.spi.ReadQueryLoadBalanceAlgorithm` 接口的所有实现类
+- 查询 `org.apache.shardingsphere.infra.algorithm.load.balancer.core.LoadBalanceAlgorithm` 接口的所有实现类
 
 ```sql
 SHOW READ QUERY LOAD BALANCE ALGORITHM PLUGINS
diff --git a/docs/document/content/user-manual/shardingsphere-proxy/distsql/syntax/ral/plugin/show-read-query-load-balance-algorithm-plugins.en.md b/docs/document/content/user-manual/shardingsphere-proxy/distsql/syntax/ral/plugin/show-read-query-load-balance-algorithm-plugins.en.md
index f4da81cbd7c..1b923c36288 100644
--- a/docs/document/content/user-manual/shardingsphere-proxy/distsql/syntax/ral/plugin/show-read-query-load-balance-algorithm-plugins.en.md
+++ b/docs/document/content/user-manual/shardingsphere-proxy/distsql/syntax/ral/plugin/show-read-query-load-balance-algorithm-plugins.en.md
@@ -5,7 +5,7 @@ weight = 3
 
 ### Description
 
-The `SHOW READ QUERY LOAD BALANCE ALGORITHM PLUGINS` syntax is used to query all the implementations of the interface `org.apache.shardingsphere.readwritesplitting.spi.ReadQueryLoadBalanceAlgorithm`.
+The `SHOW READ QUERY LOAD BALANCE ALGORITHM PLUGINS` syntax is used to query all the implementations of the interface `org.apache.shardingsphere.infra.algorithm.load.balancer.core.LoadBalanceAlgorithm`.
 
 ### Syntax
 
@@ -31,7 +31,7 @@ showReadQueryLoadBalanceAlgorithmPlugins ::=
 
 ### Example
 
-- Query all the implementations for `org.apache.shardingsphere.readwritesplitting.spi.ReadQueryLoadBalanceAlgorithm` interface
+- Query all the implementations for `org.apache.shardingsphere.infra.algorithm.load.balancer.core.LoadBalanceAlgorithm` interface
 
 ```sql
 SHOW READ QUERY LOAD BALANCE ALGORITHM PLUGINS
