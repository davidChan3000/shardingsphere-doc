commit 04184e29c6eeb360312082996289acf8f4f83ac3
Author: Zhengqiang Duan <duanzhengqiang@apache.org>
Date:   Sun Feb 18 14:52:45 2024 +0800

    Rename server.yaml to global.yaml in doc, e2e test and unit test (#30165)

diff --git a/docs/document/content/quick-start/shardingsphere-proxy-quick-start.cn.md b/docs/document/content/quick-start/shardingsphere-proxy-quick-start.cn.md
index 5da01a42144..6c6796923c4 100644
--- a/docs/document/content/quick-start/shardingsphere-proxy-quick-start.cn.md
+++ b/docs/document/content/quick-start/shardingsphere-proxy-quick-start.cn.md
@@ -30,9 +30,9 @@ ShardingSphere-Proxy 对系统库/表（如 information_schema、pg_catalog）
 
 2. 规则配置
 
-编辑 `%SHARDINGSPHERE_PROXY_HOME%/conf/server.yaml`。
+编辑 `%SHARDINGSPHERE_PROXY_HOME%/conf/global.yaml`。
 
-编辑 `%SHARDINGSPHERE_PROXY_HOME%/conf/config-xxx.yaml`。
+编辑 `%SHARDINGSPHERE_PROXY_HOME%/conf/database-xxx.yaml`。
 
 > %SHARDINGSPHERE_PROXY_HOME% 为 Proxy 解压后的路径，例：`/opt/shardingsphere-proxy-bin/`
 
diff --git a/docs/document/content/quick-start/shardingsphere-proxy-quick-start.en.md b/docs/document/content/quick-start/shardingsphere-proxy-quick-start.en.md
index b99cca09a95..b6664b89d4d 100644
--- a/docs/document/content/quick-start/shardingsphere-proxy-quick-start.en.md
+++ b/docs/document/content/quick-start/shardingsphere-proxy-quick-start.en.md
@@ -30,9 +30,9 @@ ShardingSphere-Proxy is available at:
 
 2. Rule configuration.
 
-Edit `%SHARDINGSPHERE_PROXY_HOME%/conf/server.yaml`.
+Edit `%SHARDINGSPHERE_PROXY_HOME%/conf/global.yaml`.
 
-Edit `%SHARDINGSPHERE_PROXY_HOME%/conf/config-xxx.yaml`.
+Edit `%SHARDINGSPHERE_PROXY_HOME%/conf/database-xxx.yaml`.
 
 > %SHARDINGSPHERE_PROXY_HOME% is the proxy extract path. for example: `/opt/shardingsphere-proxy-bin/`
 
diff --git a/docs/document/content/test-manual/performance-test/benchmarksql-proxy-sharding-test.cn.md b/docs/document/content/test-manual/performance-test/benchmarksql-proxy-sharding-test.cn.md
index bf883315e5f..f6e51e4009e 100644
--- a/docs/document/content/test-manual/performance-test/benchmarksql-proxy-sharding-test.cn.md
+++ b/docs/document/content/test-manual/performance-test/benchmarksql-proxy-sharding-test.cn.md
@@ -95,12 +95,12 @@ user=benchmarksql
 password=PWbmsql
 ```
 
-### ShardingSphere Proxy server.yaml 参数建议
+### ShardingSphere Proxy global.yaml 参数建议
 
 `proxy-backend-query-fetch-size` 参数值默认值为 -1，修改为 `50` 左右可以尽量减少多行结果集的 fetch 次数。 
 `proxy-frontend-executor-size` 参数默认值为 CPU * 2，可以根据实际测试结果减少至 CPU * 0.5 左右；如果涉及 NUMA，可以根据实际测试结果设置为单个 CPU 的物理核数。
 
-`server.yaml` 文件节选：
+`global.yaml` 文件节选：
 ```yaml
 props:
   proxy-backend-query-fetch-size: 50
diff --git a/docs/document/content/test-manual/performance-test/benchmarksql-proxy-sharding-test.en.md b/docs/document/content/test-manual/performance-test/benchmarksql-proxy-sharding-test.en.md
index f67377acbb0..73a2a70bc3d 100644
--- a/docs/document/content/test-manual/performance-test/benchmarksql-proxy-sharding-test.en.md
+++ b/docs/document/content/test-manual/performance-test/benchmarksql-proxy-sharding-test.en.md
@@ -96,13 +96,13 @@ user=benchmarksql
 password=PWbmsql
 ```
 
-### ShardingSphere-Proxy server.yaml parameter recommendations
+### ShardingSphere-Proxy global.yaml parameter recommendations
 
 The default value of `proxy-backend-query-fetch-size` is -1. Changing it to about `50` can minimize the number of fetch for multi-row result sets.
 
 The default value of `proxy-frontend-executor-size` is CPU * 2 and can be reduced to about CPU * 0.5 based on actual test results. If NUMA is involved, set this parameter to the number of physical cores per CPU based on actual test results.
 
-`server.yaml` file excerpt: 
+`global.yaml` file excerpt: 
 ```yaml
 props:
   proxy-backend-query-fetch-size: 50
diff --git a/docs/document/content/test-manual/pipeline-e2e-test/_index.cn.md b/docs/document/content/test-manual/pipeline-e2e-test/_index.cn.md
index ec491f860b1..9d2b2f38bea 100644
--- a/docs/document/content/test-manual/pipeline-e2e-test/_index.cn.md
+++ b/docs/document/content/test-manual/pipeline-e2e-test/_index.cn.md
@@ -27,7 +27,7 @@ weight = 4
 
 目录：`src/test/resources/env/`
 - `it-env.properties`：环境配置文件。
-- `${DATABASE-TYPE}/server.yaml`：ShardingSphere-Proxy 配置文件。
+- `${DATABASE-TYPE}/global.yaml`：ShardingSphere-Proxy 配置文件。
 - `${DATABASE-TYPE}/initdb.sql`：数据库初始化 SQL 文件。
 - `${DATABASE-TYPE}/*.cnf,*.conf`：数据库配置文件。
 - `common/*.xml`：测试用到的 DistSQL 文件。
@@ -51,12 +51,12 @@ weight = 4
 
 #### NATIVE 环境启动
 
-1. 在本地启动 ShardingSphere-Proxy（使用 3307 端口）：参考 [proxy 启动手册](/cn/user-manual/shardingsphere-proxy/startup/bin/)，或者修改 `proxy/bootstrap/src/main/resources/conf/server.yaml` 之后在 IDE 运行 `org.apache.shardingsphere.proxy.Bootstrap`。
+1. 在本地启动 ShardingSphere-Proxy（使用 3307 端口）：参考 [proxy 启动手册](/cn/user-manual/shardingsphere-proxy/startup/bin/)，或者修改 `proxy/bootstrap/src/main/resources/conf/global.yaml` 之后在 IDE 运行 `org.apache.shardingsphere.proxy.Bootstrap`。
 
 Proxy 配置可以参考：
 - test/e2e/operation/pipeline/src/test/resources/env/mysql/server-8.yaml
-- test/e2e/operation/pipeline/src/test/resources/env/postgresql/server.yaml
-- test/e2e/operation/pipeline/src/test/resources/env/opengauss/server.yaml
+- test/e2e/operation/pipeline/src/test/resources/env/postgresql/global.yaml
+- test/e2e/operation/pipeline/src/test/resources/env/opengauss/global.yaml
 
 2. 启动注册中心（如 ZooKeeper）和数据库。
 
diff --git a/docs/document/content/test-manual/pipeline-e2e-test/_index.en.md b/docs/document/content/test-manual/pipeline-e2e-test/_index.en.md
index b3d21c704ed..25bb7593306 100644
--- a/docs/document/content/test-manual/pipeline-e2e-test/_index.en.md
+++ b/docs/document/content/test-manual/pipeline-e2e-test/_index.en.md
@@ -26,7 +26,7 @@ Module path: `test/e2e/operation/pipeline`.
 
 Directory: `src/test/resources/env/`
 - `it-env.properties`: Environment setup configuration file.
-- `${DATABASE-TYPE}/server.yaml`: ShardingSphere-Proxy configuration fi;e.
+- `${DATABASE-TYPE}/global.yaml`: ShardingSphere-Proxy configuration fi;e.
 - `${DATABASE-TYPE}/initdb.sql`: Database initialization SQL file.
 - `${DATABASE-TYPE}/*.cnf,*.conf`: Database configuration files.
 - `common/*.xml`: DistSQL files.
@@ -50,12 +50,12 @@ Any property of `it-env.properties` could be defined by Maven command line param
 
 #### NATIVE environment setup
 
-1. Start ShardingSphere-Proxy (port should be 3307): refer to [proxy startup guide](/en/user-manual/shardingsphere-proxy/startup/bin/), or run `org.apache.shardingsphere.proxy.Bootstrap` in IDE after modifying `proxy/bootstrap/src/main/resources/conf/server.yaml`.
+1. Start ShardingSphere-Proxy (port should be 3307): refer to [proxy startup guide](/en/user-manual/shardingsphere-proxy/startup/bin/), or run `org.apache.shardingsphere.proxy.Bootstrap` in IDE after modifying `proxy/bootstrap/src/main/resources/conf/global.yaml`.
 
-Refer to following files for proxy `server.yaml` configuration:
+Refer to following files for proxy `global.yaml` configuration:
 - test/e2e/operation/pipeline/src/test/resources/env/mysql/server-8.yaml
-- test/e2e/operation/pipeline/src/test/resources/env/postgresql/server.yaml
-- test/e2e/operation/pipeline/src/test/resources/env/opengauss/server.yaml
+- test/e2e/operation/pipeline/src/test/resources/env/postgresql/global.yaml
+- test/e2e/operation/pipeline/src/test/resources/env/opengauss/global.yaml
 
 2. Start registry center (e.g. ZooKeeper) and database.
 
diff --git a/docs/document/content/user-manual/common-config/builtin-algorithm/metadata-repository.cn.md b/docs/document/content/user-manual/common-config/builtin-algorithm/metadata-repository.cn.md
index 800245fe6f7..dd30ff479d2 100644
--- a/docs/document/content/user-manual/common-config/builtin-algorithm/metadata-repository.cn.md
+++ b/docs/document/content/user-manual/common-config/builtin-algorithm/metadata-repository.cn.md
@@ -79,7 +79,7 @@ Apache ShardingSphere 为不同的运行模式提供了不同的元数据持久
 
 ## 操作步骤
 
-1. 在 server.yaml 中配置 Mode 运行模式
+1. 在 global.yaml 中配置 Mode 运行模式
 1. 配置元数据持久化仓库类型
 
 ## 配置示例
diff --git a/docs/document/content/user-manual/common-config/builtin-algorithm/metadata-repository.en.md b/docs/document/content/user-manual/common-config/builtin-algorithm/metadata-repository.en.md
index f5a37503cac..3ab17de54bd 100644
--- a/docs/document/content/user-manual/common-config/builtin-algorithm/metadata-repository.en.md
+++ b/docs/document/content/user-manual/common-config/builtin-algorithm/metadata-repository.en.md
@@ -79,7 +79,7 @@ Attributes:
 
 ## Procedure
 
-1. Configure running mode in server.yaml.
+1. Configure running mode in global.yaml.
 1. Configure metadata persistence warehouse type.
 
 ## Sample
diff --git a/docs/document/content/user-manual/shardingsphere-jdbc/yaml-config/rules/transaction.cn.md b/docs/document/content/user-manual/shardingsphere-jdbc/yaml-config/rules/transaction.cn.md
index aa9c88f0776..e602b0d100a 100644
--- a/docs/document/content/user-manual/shardingsphere-jdbc/yaml-config/rules/transaction.cn.md
+++ b/docs/document/content/user-manual/shardingsphere-jdbc/yaml-config/rules/transaction.cn.md
@@ -19,7 +19,7 @@ transaction:
 
 ### 使用 LOCAL 模式
 
-server.yaml 配置文件内容如下：
+global.yaml 配置文件内容如下：
 
 ```yaml
 transaction:
@@ -28,7 +28,7 @@ transaction:
 
 ### 使用 XA 模式
 
-server.yaml 配置文件内容如下：
+global.yaml 配置文件内容如下：
 
 ```yaml
 transaction:
@@ -51,7 +51,7 @@ shardingsphere-transaction-xa-narayana-x.x.x-SNAPSHOT.jar
 
 ### 使用 BASE 模式
 
-server.yaml 配置文件内容如下：
+global.yaml 配置文件内容如下：
 
 ```yaml
 transaction:
diff --git a/docs/document/content/user-manual/shardingsphere-jdbc/yaml-config/rules/transaction.en.md b/docs/document/content/user-manual/shardingsphere-jdbc/yaml-config/rules/transaction.en.md
index b956a51ea18..c48aa65da90 100644
--- a/docs/document/content/user-manual/shardingsphere-jdbc/yaml-config/rules/transaction.en.md
+++ b/docs/document/content/user-manual/shardingsphere-jdbc/yaml-config/rules/transaction.en.md
@@ -19,7 +19,7 @@ transaction:
 
 ### Use LOCAL Mode
 
-The content of the server.yaml configuration file is as follows:
+The content of the global.yaml configuration file is as follows:
 
 ```yaml
 transaction:
@@ -28,7 +28,7 @@ transaction:
 
 ### Use XA Mode
 
-The content of the server.yaml configuration file is as follows:
+The content of the global.yaml configuration file is as follows:
 
 ```yaml
 transaction:
@@ -51,7 +51,7 @@ shardingsphere-transaction-xa-narayana-x.x.x-SNAPSHOT.jar
 
 ### Use BASE Mode
 
-The content of the server.yaml configuration file is as follows:
+The content of the global.yaml configuration file is as follows:
 
 ```yaml
 transaction:
diff --git a/docs/document/content/user-manual/shardingsphere-proxy/cdc/build.cn.md b/docs/document/content/user-manual/shardingsphere-proxy/cdc/build.cn.md
index 93be4fe27d3..2445d96cba7 100644
--- a/docs/document/content/user-manual/shardingsphere-proxy/cdc/build.cn.md
+++ b/docs/document/content/user-manual/shardingsphere-proxy/cdc/build.cn.md
@@ -26,7 +26,7 @@ ShardingSphere CDC 分为两个部分，一个是 CDC Server，另一个是 CDC
 
 官网发布的二进制包默认不包含 GLT 模块，如果使用的是包含 GLT 功能的 openGauss 数据库，则可以额外引入 GLT 模块，保证 XA 事务的完整性。
 
-目前有两种方式引入 GLT 模块，并且需要在 server.yaml 中也进行相应的配置。
+目前有两种方式引入 GLT 模块，并且需要在 global.yaml 中也进行相应的配置。
 
 #### 1. 源码编译安装
 
@@ -47,11 +47,11 @@ ShardingSphere CDC 分为两个部分，一个是 CDC Server，另一个是 CDC
 
 ### CDC Server 使用手册
 
-1. 修改配置文件 `conf/server.yaml`，打开 CDC 功能。 目前 `mode` 必须是 `Cluster`，需要提前启动对应的注册中心。如果 GLT provider 使用 Redis，需要提前启动 Redis。
+1. 修改配置文件 `conf/global.yaml`，打开 CDC 功能。 目前 `mode` 必须是 `Cluster`，需要提前启动对应的注册中心。如果 GLT provider 使用 Redis，需要提前启动 Redis。
 
 配置示例：
 
-1. 在 `server.yaml` 中开启 CDC 功能。
+1. 在 `global.yaml` 中开启 CDC 功能。
 
 ```yaml
 mode:
diff --git a/docs/document/content/user-manual/shardingsphere-proxy/cdc/build.en.md b/docs/document/content/user-manual/shardingsphere-proxy/cdc/build.en.md
index 748e36c66dc..7fc677c9651 100644
--- a/docs/document/content/user-manual/shardingsphere-proxy/cdc/build.en.md
+++ b/docs/document/content/user-manual/shardingsphere-proxy/cdc/build.en.md
@@ -26,7 +26,7 @@ Since the CDC Server is built into ShardingSphere-Proxy, you need to get Shardin
 
 The official website's released binary package does not include the GLT module by default, if you are using the openGauss database with GLT functionality, you can additionally introduce the GLT module to ensure the integrity of XA transactions.
 
-There are currently two ways to introduce the GLT module, and corresponding configurations need to be made in server.yaml.
+There are currently two ways to introduce the GLT module, and corresponding configurations need to be made in global.yaml.
 
 #### 1. Source code compilation and installation
 
@@ -46,11 +46,11 @@ Can be introduced from the maven repository
 
 ### CDC Server User Manual
 
-1. Modify the configuration file `conf/server.yaml` and turn on the CDC function. Currently, `mode` must be `Cluster`, and the corresponding registry center needs to be started in advance. If the GLT provider uses Redis, Redis needs to be started in advance.
+1. Modify the configuration file `conf/global.yaml` and turn on the CDC function. Currently, `mode` must be `Cluster`, and the corresponding registry center needs to be started in advance. If the GLT provider uses Redis, Redis needs to be started in advance.
 
 Configuration example:
 
-1. Enable CDC function in `server.yaml`.
+1. Enable CDC function in `global.yaml`.
 
 ```yaml
 mode:
diff --git a/docs/document/content/user-manual/shardingsphere-proxy/cdc/usage.cn.md b/docs/document/content/user-manual/shardingsphere-proxy/cdc/usage.cn.md
index fdb66786951..80bc4db2552 100644
--- a/docs/document/content/user-manual/shardingsphere-proxy/cdc/usage.cn.md
+++ b/docs/document/content/user-manual/shardingsphere-proxy/cdc/usage.cn.md
@@ -198,7 +198,7 @@ public final class Bootstrap {
 主要有4个步骤
 1. 构造 CDCClient，传入 CDCClientConfiguration
 2. 调用 CDCClient.connect，这一步是和 CDC Server 建立连接
-3. 调用 CDCClient.login，使用 server.yaml 中配置好的用户名和密码登录
+3. 调用 CDCClient.login，使用 global.yaml 中配置好的用户名和密码登录
 4. 调用 CDCClient.startStreaming，开启订阅，需要保证订阅的库和表在 ShardingSphere-Proxy 存在，否则会报错。
 
 > CDCClient.await 是阻塞主线程，非必需的步骤，用其他方式也可以，只要保证 CDC 线程一直在工作就行。
diff --git a/docs/document/content/user-manual/shardingsphere-proxy/cdc/usage.en.md b/docs/document/content/user-manual/shardingsphere-proxy/cdc/usage.en.md
index 0090daa0409..42c8eb76121 100644
--- a/docs/document/content/user-manual/shardingsphere-proxy/cdc/usage.en.md
+++ b/docs/document/content/user-manual/shardingsphere-proxy/cdc/usage.en.md
@@ -198,7 +198,7 @@ public final class Bootstrap {
 There are mainly 4 steps
 1. Construct CDCClient, pass in CDCClientConfiguration
 2. Call CDCClient.connect(), this step is to establish a connection with the CDC Server
-3. Call CDCClient.login(), log in with the username and password configured in server.yaml
+3. Call CDCClient.login(), log in with the username and password configured in global.yaml
 4. Call CDCClient.startStreaming(), start subscribing, you need to ensure that the subscribed database and table exist in ShardingSphere-Proxy, otherwise an error will be reported
 
 > CDCClient.await is to block the main thread, it is not a necessary step, other methods can also be used, as long as the CDC thread is always working.
diff --git a/docs/document/content/user-manual/shardingsphere-proxy/distsql/usage/_index.cn.md b/docs/document/content/user-manual/shardingsphere-proxy/distsql/usage/_index.cn.md
index ac0bebf95c4..bbbccf3b27e 100644
--- a/docs/document/content/user-manual/shardingsphere-proxy/distsql/usage/_index.cn.md
+++ b/docs/document/content/user-manual/shardingsphere-proxy/distsql/usage/_index.cn.md
@@ -14,7 +14,7 @@ chapter = true
 2. 创建待注册资源的 MySQL 数据库；
 3. 在 MySQL 中为 ShardingSphere-Proxy 创建一个拥有创建权限的角色或者用户；
 4. 启动 ZooKeeper 服务；
-5. 添加 `mode` 和 `authentication` 配置参数到 `server.yaml`；
+5. 添加 `mode` 和 `authentication` 配置参数到 `global.yaml`；
 6. 启动 ShardingSphere-Proxy；
 7. 通过应用程序或终端连接到 ShardingSphere-Proxy；
 
diff --git a/docs/document/content/user-manual/shardingsphere-proxy/distsql/usage/_index.en.md b/docs/document/content/user-manual/shardingsphere-proxy/distsql/usage/_index.en.md
index c53dba17ba2..c74ee862c26 100644
--- a/docs/document/content/user-manual/shardingsphere-proxy/distsql/usage/_index.en.md
+++ b/docs/document/content/user-manual/shardingsphere-proxy/distsql/usage/_index.en.md
@@ -14,7 +14,7 @@ Use MySQL as example, can replace to other databases.
 1. Create to be registered MySQL databases;
 1. Create role and user in MySQL with creation permission for ShardingSphere-Proxy;
 1. Start Zookeeper service;
-1. Add `mode` and `authentication` configurations to `server.yaml`;
+1. Add `mode` and `authentication` configurations to `global.yaml`;
 1. Start ShardingSphere-Proxy;
 1. Use SDK or terminal connect to ShardingSphere-Proxy.
 
diff --git a/docs/document/content/user-manual/shardingsphere-proxy/migration/build.cn.md b/docs/document/content/user-manual/shardingsphere-proxy/migration/build.cn.md
index 865347aef70..ffa1b958679 100644
--- a/docs/document/content/user-manual/shardingsphere-proxy/migration/build.cn.md
+++ b/docs/document/content/user-manual/shardingsphere-proxy/migration/build.cn.md
@@ -16,7 +16,7 @@ weight = 1
 
 1. 获取 ShardingSphere-Proxy。详情请参见 [proxy 启动手册](/cn/user-manual/shardingsphere-proxy/startup/bin/)。
 
-2. 修改配置文件 `conf/server.yaml`，详情请参见[模式配置](/cn/user-manual/shardingsphere-jdbc/yaml-config/mode/)。
+2. 修改配置文件 `conf/global.yaml`，详情请参见[模式配置](/cn/user-manual/shardingsphere-jdbc/yaml-config/mode/)。
 
 目前 `mode` 必须是 `Cluster`，需要提前启动对应的注册中心。
 
diff --git a/docs/document/content/user-manual/shardingsphere-proxy/migration/build.en.md b/docs/document/content/user-manual/shardingsphere-proxy/migration/build.en.md
index 4f6e68844f3..ee345f44ce4 100644
--- a/docs/document/content/user-manual/shardingsphere-proxy/migration/build.en.md
+++ b/docs/document/content/user-manual/shardingsphere-proxy/migration/build.en.md
@@ -16,7 +16,7 @@ For systems running on a single database that urgently need to securely and simp
 
 1. Get ShardingSphere-Proxy. Please refer to [proxy startup guide](/en/user-manual/shardingsphere-proxy/startup/bin/) for details.
 
-2. Modify the configuration file `conf/server.yaml`. Please refer to [mode configuration](/en/user-manual/shardingsphere-jdbc/yaml-config/mode/) for details.
+2. Modify the configuration file `conf/global.yaml`. Please refer to [mode configuration](/en/user-manual/shardingsphere-jdbc/yaml-config/mode/) for details.
 
 Currently, `mode` must be `Cluster`, and the corresponding registry must be started in advance.
 
diff --git a/docs/document/content/user-manual/shardingsphere-proxy/observability/_index.cn.md b/docs/document/content/user-manual/shardingsphere-proxy/observability/_index.cn.md
index 5d397782f94..a6fc8d381bb 100644
--- a/docs/document/content/user-manual/shardingsphere-proxy/observability/_index.cn.md
+++ b/docs/document/content/user-manual/shardingsphere-proxy/observability/_index.cn.md
@@ -127,7 +127,7 @@ bin/start.sh
 
 - 假设本地已完成如下的对应配置。
   - 包含 ShardingSphere-Agent 二进制包解压后的所有文件的文件夹 `./custom/agent/`
-  - 包含 `server.yaml` 等 ShardingSphere-Proxy 的配置文件的文件夹为 `./custom/conf/`
+  - 包含 `global.yaml` 等 ShardingSphere-Proxy 的配置文件的文件夹为 `./custom/conf/`
 
 - 此时可通过环境变量 `JVM_OPT` 来配置 ShardingSphere-Agent 的使用。
   以在 Docker Compose 环境下启动为例，合理的 `docker-compose.yml` 示例如下。
diff --git a/docs/document/content/user-manual/shardingsphere-proxy/observability/_index.en.md b/docs/document/content/user-manual/shardingsphere-proxy/observability/_index.en.md
index 5463b81faf0..d8bad5147dd 100644
--- a/docs/document/content/user-manual/shardingsphere-proxy/observability/_index.en.md
+++ b/docs/document/content/user-manual/shardingsphere-proxy/observability/_index.en.md
@@ -129,7 +129,7 @@ After startup, you can find the plugin info in the log of ShardingSphere-Proxy,
 
 - Assume that the following corresponding configurations have been completed locally.
   - Folder `./custom/agent/` that contains all files after unpacking ShardingSphere-Agent binary package
-  - The folder containing the configuration files of ShardingSphere-Proxy such as `server.yaml` is `./custom/conf/`
+  - The folder containing the configuration files of ShardingSphere-Proxy such as `global.yaml` is `./custom/conf/`
 
 - At this point, the use of ShardingSphere-Agent can be configured through the environment variable `JVM_OPT`.
   Taking starting in the Docker Compose environment as an example, a reasonable `docker-compose.yml` example is as
diff --git a/docs/document/content/user-manual/shardingsphere-proxy/startup/bin.cn.md b/docs/document/content/user-manual/shardingsphere-proxy/startup/bin.cn.md
index 4ec820253fc..f7ad33a1ad0 100644
--- a/docs/document/content/user-manual/shardingsphere-proxy/startup/bin.cn.md
+++ b/docs/document/content/user-manual/shardingsphere-proxy/startup/bin.cn.md
@@ -17,9 +17,9 @@ weight = 1
 
 在[下载页面](https://shardingsphere.apache.org/document/current/cn/downloads/)获取。
 
-2. 配置 `conf/server.yaml`
+2. 配置 `conf/global.yaml`
 
-ShardingSphere-Proxy 运行模式在 `server.yaml` 中配置，配置格式与 ShardingSphere-JDBC 一致，请参考[模式配置](/cn/user-manual/shardingsphere-jdbc/yaml-config/mode/)。
+ShardingSphere-Proxy 运行模式在 `global.yaml` 中配置，配置格式与 ShardingSphere-JDBC 一致，请参考[模式配置](/cn/user-manual/shardingsphere-jdbc/yaml-config/mode/)。
 
 其他配置项请参考：
 * [权限配置](/cn/user-manual/shardingsphere-proxy/yaml-config/authority/)
diff --git a/docs/document/content/user-manual/shardingsphere-proxy/startup/bin.en.md b/docs/document/content/user-manual/shardingsphere-proxy/startup/bin.en.md
index 3a2f8b38f91..880dc0cf361 100644
--- a/docs/document/content/user-manual/shardingsphere-proxy/startup/bin.en.md
+++ b/docs/document/content/user-manual/shardingsphere-proxy/startup/bin.en.md
@@ -17,9 +17,9 @@ Start the Proxy with a binary package requires an environment with Java JRE 8 or
 
 Obtain the binary release package of ShardingSphere-Proxy on the [download page](https://shardingsphere.apache.org/document/current/en/downloads/).
 
-2. Configure `conf/server.yaml`
+2. Configure `conf/global.yaml`
 
-ShardingSphere-Proxy's operational mode is configured on `server.yaml`, and its configuration mode is the same with that of ShardingSphere-JDBC. Refer to [mode of configuration](/en/user-manual/shardingsphere-jdbc/yaml-config/mode/).
+ShardingSphere-Proxy's operational mode is configured on `global.yaml`, and its configuration mode is the same with that of ShardingSphere-JDBC. Refer to [mode of configuration](/en/user-manual/shardingsphere-jdbc/yaml-config/mode/).
 
 Please refer to the following links for other configuration items:
 * [Permission configuration](/en/user-manual/shardingsphere-proxy/yaml-config/authority/)
diff --git a/docs/document/content/user-manual/shardingsphere-proxy/startup/docker.cn.md b/docs/document/content/user-manual/shardingsphere-proxy/startup/docker.cn.md
index fa01865e98a..d02c975b93e 100644
--- a/docs/document/content/user-manual/shardingsphere-proxy/startup/docker.cn.md
+++ b/docs/document/content/user-manual/shardingsphere-proxy/startup/docker.cn.md
@@ -35,7 +35,7 @@ cd shardingsphere-distribution/shardingsphere-proxy-distribution
 I/O exception (java.io.IOException) caught when processing request to {}->unix://localhost:80: Connection refused？
 ```
 
-2. 配置 `conf/server.yaml` 和 `conf/config-*.yaml`
+2. 配置 `conf/global.yaml` 和 `conf/config-*.yaml`
 
 可以从 Docker 容器中获取配置文件模板，拷贝到宿主机任意目录中：
 ```bash
diff --git a/docs/document/content/user-manual/shardingsphere-proxy/startup/docker.en.md b/docs/document/content/user-manual/shardingsphere-proxy/startup/docker.en.md
index d8695a78647..d8cbe54ec17 100644
--- a/docs/document/content/user-manual/shardingsphere-proxy/startup/docker.en.md
+++ b/docs/document/content/user-manual/shardingsphere-proxy/startup/docker.en.md
@@ -35,7 +35,7 @@ If the following problems emerge, please make sure Docker daemon Process is runn
 I/O exception (java.io.IOException) caught when processing request to {}->unix://localhost:80: Connection refused？
 ```
 
-2. Configure `conf/server.yaml` and `conf/config-*.yaml`
+2. Configure `conf/global.yaml` and `conf/config-*.yaml`
 
 Configuration file template can be attained from the Docker container and can be copied to any directory on the host:
 ```bash
diff --git a/docs/document/content/user-manual/shardingsphere-proxy/startup/graalvm-native-image.cn.md b/docs/document/content/user-manual/shardingsphere-proxy/startup/graalvm-native-image.cn.md
index f440250dbaa..ba92f51e466 100644
--- a/docs/document/content/user-manual/shardingsphere-proxy/startup/graalvm-native-image.cn.md
+++ b/docs/document/content/user-manual/shardingsphere-proxy/startup/graalvm-native-image.cn.md
@@ -11,7 +11,7 @@ weight = 2
 
 - ShardingSphere Proxy 尚未准备好与 GraalVM Native Image 集成。 Proxy 的 Native Image 产物在
   https://github.com/apache/shardingsphere/pkgs/container/shardingsphere-proxy-native 存在每夜构建。假设存在包
-  含`server.yaml` 的 `conf` 文件夹为 `./custom/conf`，你可通过如下的 `docker-compose.yml` 文件进行测试。
+  含`global.yaml` 的 `conf` 文件夹为 `./custom/conf`，你可通过如下的 `docker-compose.yml` 文件进行测试。
 
 ```yaml
 version: "3.8"
@@ -86,7 +86,7 @@ sdk install java 21.0.2-graalce
 ```
 
 3. 通过命令行启动 Native Image, 需要带上 4 个参数。
-   第一个参数为 ShardingSphere Proxy 使用的端口，第二个参数为你编写的包含 `server.yaml` 的 `/conf` 文件夹，
+   第一个参数为 ShardingSphere Proxy 使用的端口，第二个参数为你编写的包含 `global.yaml` 的 `/conf` 文件夹，
    第三个参数为绑定端口的 Address，第四个参数为 Force Start，如果为 true 则保证 ShardingSphere Proxy Native 无论能否连接都能正常启动。
    假设已存在文件夹`./custom/conf`，示例为
 
@@ -100,7 +100,7 @@ sdk install java 21.0.2-graalce
 ./mvnw -am -pl distribution/proxy-native -T1C -Prelease.native,docker.native -DskipTests clean package
 ```
 
-- 假设存在包含`server.yaml` 的 `conf` 文件夹为 `./custom/conf`，可通过如下的 `docker-compose.yml` 文件启动 GraalVM Native
+- 假设存在包含`global.yaml` 的 `conf` 文件夹为 `./custom/conf`，可通过如下的 `docker-compose.yml` 文件启动 GraalVM Native
   Image 对应的 Docker Image。
 
 ```yaml
diff --git a/docs/document/content/user-manual/shardingsphere-proxy/startup/graalvm-native-image.en.md b/docs/document/content/user-manual/shardingsphere-proxy/startup/graalvm-native-image.en.md
index e7dca5d9e67..9311ef87c90 100644
--- a/docs/document/content/user-manual/shardingsphere-proxy/startup/graalvm-native-image.en.md
+++ b/docs/document/content/user-manual/shardingsphere-proxy/startup/graalvm-native-image.en.md
@@ -12,7 +12,7 @@ corresponding `Docker Image` through the `native-image` component of `GraalVM`.
 
 - ShardingSphere Proxy is not yet ready to integrate with GraalVM Native Image. Proxy's Native Image artifacts are
   built nightly at https://github.com/apache/shardingsphere/pkgs/container/shardingsphere-proxy-native .
-  Assuming there is a `conf` folder containing `server.yaml` as `./custom/conf`, you can test it with the
+  Assuming there is a `conf` folder containing `global.yaml` as `./custom/conf`, you can test it with the
   following `docker-compose.yml` file.
 
 ````yaml
@@ -91,7 +91,7 @@ sdk install java 21.0.2-graalce
 ```
 
 3. To start Native Image through the command line, you need to bring 4 parameters. The first parameter is the `Port`
-   used by ShardingSphere Proxy, the second parameter is the `/conf` folder containing `server.yaml` written by you, the
+   used by ShardingSphere Proxy, the second parameter is the `/conf` folder containing `global.yaml` written by you, the
    third parameter is the `Address` of the bound port, and the fourth parameter is `Force Start`, if it is true, it will
    ensure that ShardingSphere Proxy Native can start normally no matter whether it is connected or not. Assuming the
    folder `./custom/conf` already exists, the example is
@@ -107,7 +107,7 @@ sdk install java 21.0.2-graalce
 ./mvnw -am -pl distribution/proxy-native -B -T1C -Prelease.native,docker.native -DskipTests clean package
 ```
 
-- Assuming that there is a `conf` folder containing `server.yaml` as `./custom/conf`, you can start the Docker Image
+- Assuming that there is a `conf` folder containing `global.yaml` as `./custom/conf`, you can start the Docker Image
   corresponding to GraalVM Native Image through the following `docker-compose.yml` file.
 
 ```yaml
diff --git a/docs/document/content/user-manual/shardingsphere-proxy/startup/helm.cn.md b/docs/document/content/user-manual/shardingsphere-proxy/startup/helm.cn.md
index 7f882e1e734..8d9685deb02 100644
--- a/docs/document/content/user-manual/shardingsphere-proxy/startup/helm.cn.md
+++ b/docs/document/content/user-manual/shardingsphere-proxy/startup/helm.cn.md
@@ -212,8 +212,8 @@ compute:
   ## @section Compute-Node ShardingSphere-Proxy ServerConfiguration parameters
   ## NOTE: If you use the sub-charts to deploy Zookeeper, the server-lists field must be "{{ printf \"%s-zookeeper.%s:2181\" .Release.Name .Release.Namespace }}",
   ## otherwise please fill in the correct zookeeper address
-  ## The server.yaml is auto-generated based on this parameter.
-  ## If it is empty, the server.yaml is also empty.
+  ## The global.yaml is auto-generated based on this parameter.
+  ## If it is empty, the global.yaml is also empty.
   ## ref: https://shardingsphere.apache.org/document/current/en/user-manual/shardingsphere-jdbc/yaml-config/mode/
   ## ref: https://shardingsphere.apache.org/document/current/en/user-manual/common-config/builtin-algorithm/metadata-repository/
   ##
diff --git a/docs/document/content/user-manual/shardingsphere-proxy/startup/helm.en.md b/docs/document/content/user-manual/shardingsphere-proxy/startup/helm.en.md
index d9c11abbd3c..d2d85e3eec0 100644
--- a/docs/document/content/user-manual/shardingsphere-proxy/startup/helm.en.md
+++ b/docs/document/content/user-manual/shardingsphere-proxy/startup/helm.en.md
@@ -216,8 +216,8 @@ compute:
   ## @section Compute-Node ShardingSphere-Proxy ServerConfiguration parameters
   ## NOTE: If you use the sub-charts to deploy Zookeeper, the server-lists field must be "{{ printf \"%s-zookeeper.%s:2181\" .Release.Name .Release.Namespace }}",
   ## otherwise please fill in the correct zookeeper address
-  ## The server.yaml is auto-generated based on this parameter.
-  ## If it is empty, the server.yaml is also empty.
+  ## The global.yaml is auto-generated based on this parameter.
+  ## If it is empty, the global.yaml is also empty.
   ## ref: https://shardingsphere.apache.org/document/current/en/user-manual/shardingsphere-jdbc/yaml-config/mode/
   ## ref: https://shardingsphere.apache.org/document/current/en/user-manual/common-config/builtin-algorithm/metadata-repository/
   ##
diff --git a/docs/document/content/user-manual/shardingsphere-proxy/yaml-config/_index.cn.md b/docs/document/content/user-manual/shardingsphere-proxy/yaml-config/_index.cn.md
index b9cf8d89e49..8dfb075116c 100644
--- a/docs/document/content/user-manual/shardingsphere-proxy/yaml-config/_index.cn.md
+++ b/docs/document/content/user-manual/shardingsphere-proxy/yaml-config/_index.cn.md
@@ -4,7 +4,7 @@ weight = 2
 +++
 
 ShardingSphere-JDBC 的 YAML 配置是 ShardingSphere-Proxy 的子集。
-在 `server.yaml` 文件中，ShardingSphere-Proxy 能够额外配置权限功能和更多的 Proxy 专有属性。
+在 `global.yaml` 文件中，ShardingSphere-Proxy 能够额外配置权限功能和更多的 Proxy 专有属性。
 
 说明：
 YAML 配置文件支持配置内容超过 3MB。
diff --git a/docs/document/content/user-manual/shardingsphere-proxy/yaml-config/_index.en.md b/docs/document/content/user-manual/shardingsphere-proxy/yaml-config/_index.en.md
index 4805eb6a393..01074ec88f1 100644
--- a/docs/document/content/user-manual/shardingsphere-proxy/yaml-config/_index.en.md
+++ b/docs/document/content/user-manual/shardingsphere-proxy/yaml-config/_index.en.md
@@ -4,7 +4,7 @@ weight = 2
 +++
 
 The YAML configuration of ShardingSphere-JDBC is the subset of ShardingSphere-Proxy.
-In `server.yaml` file, ShardingSphere-Proxy can configure authority feature and more properties for Proxy only.
+In `global.yaml` file, ShardingSphere-Proxy can configure authority feature and more properties for Proxy only.
 
 Note:
 The YAML configuration file supports more than 3MB of configuration content.
diff --git a/docs/document/content/user-manual/shardingsphere-proxy/yaml-config/props.cn.md b/docs/document/content/user-manual/shardingsphere-proxy/yaml-config/props.cn.md
index 1fcdd082818..0734647e43f 100644
--- a/docs/document/content/user-manual/shardingsphere-proxy/yaml-config/props.cn.md
+++ b/docs/document/content/user-manual/shardingsphere-proxy/yaml-config/props.cn.md
@@ -6,7 +6,7 @@ chapter = true
 
 ## 背景信息
 
-Apache ShardingSphere 提供了丰富的系统配置属性，用户可通过 `server.yaml` 进行配置。
+Apache ShardingSphere 提供了丰富的系统配置属性，用户可通过 `global.yaml` 进行配置。
 
 ## 参数解释
 
@@ -34,4 +34,4 @@ Apache ShardingSphere 提供了丰富的系统配置属性，用户可通过 `se
 
 ## 配置示例
 
-完整配置示例请参考 ShardingSphere 仓库内的 `server.yaml`：<https://github.com/apache/shardingsphere/blob/aac0d3026e00575114701be603ec189a02a45747/shardingsphere-proxy/shardingsphere-proxy-bootstrap/src/main/resources/conf/server.yaml#L71-L93>
+完整配置示例请参考 ShardingSphere 仓库内的 `global.yaml`：<https://github.com/apache/shardingsphere/blob/612cd5d8e802d0d712a3a4d89da8fdc048d23879/proxy/bootstrap/src/main/resources/conf/global.yaml#L71-L89>
diff --git a/docs/document/content/user-manual/shardingsphere-proxy/yaml-config/props.en.md b/docs/document/content/user-manual/shardingsphere-proxy/yaml-config/props.en.md
index 3af204f8a8f..a3627e5f571 100644
--- a/docs/document/content/user-manual/shardingsphere-proxy/yaml-config/props.en.md
+++ b/docs/document/content/user-manual/shardingsphere-proxy/yaml-config/props.en.md
@@ -6,7 +6,7 @@ chapter = true
 
 ## Background
 
-Apache ShardingSphere provides a wealth of system configuration properties, which users can configure through `server.yaml`.
+Apache ShardingSphere provides a wealth of system configuration properties, which users can configure through `global.yaml`.
 
 ## Parameters
 
@@ -34,4 +34,4 @@ Properties that support dynamic change can take effect immediately. For the ones
 
 ## Sample
 
-For a complete sample, please refer to `server.yaml` in ShardingSphere's repository：<https://github.com/apache/shardingsphere/blob/aac0d3026e00575114701be603ec189a02a45747/shardingsphere-proxy/shardingsphere-proxy-bootstrap/src/main/resources/conf/server.yaml#L71-L93>
+For a complete sample, please refer to `global.yaml` in ShardingSphere's repository：<https://github.com/apache/shardingsphere/blob/612cd5d8e802d0d712a3a4d89da8fdc048d23879/proxy/bootstrap/src/main/resources/conf/global.yaml#L71-L89>
diff --git a/docs/document/content/user-manual/shardingsphere-proxy/yaml-config/rules.cn.md b/docs/document/content/user-manual/shardingsphere-proxy/yaml-config/rules.cn.md
index 0d4d205e318..4ba87df12af 100644
--- a/docs/document/content/user-manual/shardingsphere-proxy/yaml-config/rules.cn.md
+++ b/docs/document/content/user-manual/shardingsphere-proxy/yaml-config/rules.cn.md
@@ -13,7 +13,7 @@ ShardingSphere-Proxy 的规则配置与 ShardingSphere-JDBC 一致，具体规
 
 ## 注意事项
 
-与 ShardingSphere-JDBC 不同的是，以下规则需要配置在 ShardingSphere-Proxy 的 `server.yaml` 中：
+与 ShardingSphere-JDBC 不同的是，以下规则需要配置在 ShardingSphere-Proxy 的 `global.yaml` 中：
 
 * [SQL 解析](/cn/user-manual/shardingsphere-jdbc/yaml-config/rules/sql-parser/)
 ```yaml
diff --git a/docs/document/content/user-manual/shardingsphere-proxy/yaml-config/rules.en.md b/docs/document/content/user-manual/shardingsphere-proxy/yaml-config/rules.en.md
index 976ef86a08d..61f96512b9b 100644
--- a/docs/document/content/user-manual/shardingsphere-proxy/yaml-config/rules.en.md
+++ b/docs/document/content/user-manual/shardingsphere-proxy/yaml-config/rules.en.md
@@ -14,7 +14,7 @@ For details, please refer to [ShardingSphere-JDBC Rules Configuration](/en/user-
 
 ## Notice
 
-Unlike ShardingSphere-JDBC, the following rules need to be configured in ShardingSphere-Proxy's `server.yaml`:
+Unlike ShardingSphere-JDBC, the following rules need to be configured in ShardingSphere-Proxy's `global.yaml`:
 
 * [SQL Parsing](/en/user-manual/shardingsphere-jdbc/yaml-config/rules/sql-parser/)
 ```yaml
