commit 286f1cbea1f9d0a3a6761b6d823bf76be7fc5b7d
Author: Zhengqiang Duan <duanzhengqiang@apache.org>
Date:   Mon Aug 14 12:35:19 2023 +0800

    Remove useless mask algorithm and document (#28071)
    
    * Remove useless mask algorithm and document
    
    * remove config in org.apache.shardingsphere.mask.spi.MaskAlgorithm

diff --git a/docs/document/content/dev-manual/mask.cn.md b/docs/document/content/dev-manual/mask.cn.md
index f6f5215f504..8d88ccce787 100644
--- a/docs/document/content/dev-manual/mask.cn.md
+++ b/docs/document/content/dev-manual/mask.cn.md
@@ -26,9 +26,4 @@ chapter = true
 | MASK_FROM_X_TO_Y                        | 遮盖自 x 至 y 数据脱敏算法 | [`org.apache.shardingsphere.mask.algorithm.cover.MaskFromXToYMaskAlgorithm`](https://github.com/apache/shardingsphere/blob/master/features/mask/core/src/main/java/org/apache/shardingsphere/mask/algorithm/cover/MaskFromXToYMaskAlgorithm.java)                                           |
 | MASK_BEFORE_SPECIAL_CHARS               | 特殊字符前遮盖数据脱敏算法    | [`org.apache.shardingsphere.mask.algorithm.cover.MaskBeforeSpecialCharsAlgorithm`](https://github.com/apache/shardingsphere/blob/master/features/mask/core/src/main/java/org/apache/shardingsphere/mask/algorithm/cover/MaskBeforeSpecialCharsAlgorithm.java)                               |
 | MASK_AFTER_SPECIAL_CHARS                | 特殊字符后遮盖数据脱敏算法    | [`org.apache.shardingsphere.mask.algorithm.cover.MaskAfterSpecialCharsAlgorithm`](https://github.com/apache/shardingsphere/blob/master/features/mask/core/src/main/java/org/apache/shardingsphere/mask/algorithm/cover/MaskAfterSpecialCharsAlgorithm.java)                                 |
-| PERSONAL_IDENTITY_NUMBER_RANDOM_REPLACE | 身份证号随机替换数据脱敏算法   | [`org.apache.shardingsphere.mask.algorithm.replace.PersonalIdentityNumberRandomReplaceAlgorithm`](https://github.com/apache/shardingsphere/blob/master/features/mask/core/src/main/java/org/apache/shardingsphere/mask/algorithm/replace/PersonalIdentityNumberRandomReplaceAlgorithm.java) |
-| MILITARY_IDENTITY_NUMBER_RANDOM_REPLACE | 军官证随机替换数据脱敏算法    | [`org.apache.shardingsphere.mask.algorithm.replace.MilitaryIdentityNumberRandomReplaceAlgorithm`](https://github.com/apache/shardingsphere/blob/master/features/mask/core/src/main/java/org/apache/shardingsphere/mask/algorithm/replace/MilitaryIdentityNumberRandomReplaceAlgorithm.java) |
-| TELEPHONE_RANDOM_REPLACE                | ⼿机号随机替换数据脱敏算法    | [`org.apache.shardingsphere.mask.algorithm.replace.TelephoneRandomReplaceAlgorithm`](https://github.com/apache/shardingsphere/blob/master/features/mask/core/src/main/java/org/apache/shardingsphere/mask/algorithm/replace/TelephoneRandomReplaceAlgorithm.java)                           |
-| LANDLINE_NUMBER_RANDOM_REPLACE          | 座机号码随机替换         | [`org.apache.shardingsphere.mask.algorithm.replace.LandlineNumberRandomAlgorithm`](https://github.com/apache/shardingsphere/blob/master/features/mask/core/src/main/java/org/apache/shardingsphere/mask/algorithm/replace/LandlineNumberRandomAlgorithm.java)                               |
 | GENERIC_TABLE_RANDOM_REPLACE            | 通⽤表格随机替换         | [`org.apache.shardingsphere.mask.algorithm.replace.GenericTableRandomReplaceAlgorithm`](https://github.com/apache/shardingsphere/blob/master/features/mask/core/src/main/java/org/apache/shardingsphere/mask/algorithm/replace/GenericTableRandomReplaceAlgorithm.java)                     |
-| UNIFIED_CREDIT_CODE_RANDOM_REPLACE      | 统⼀信⽤码随机替换        | [`org.apache.shardingsphere.mask.algorithm.replace.UnifiedCreditCodeRandomReplaceAlgorithm`](https://github.com/apache/shardingsphere/blob/master/features/mask/core/src/main/java/org/apache/shardingsphere/mask/algorithm/replace/UnifiedCreditCodeRandomReplaceAlgorithm.java)           |
diff --git a/docs/document/content/dev-manual/mask.en.md b/docs/document/content/dev-manual/mask.en.md
index dc77ef2926b..67580110eea 100644
--- a/docs/document/content/dev-manual/mask.en.md
+++ b/docs/document/content/dev-manual/mask.en.md
@@ -26,9 +26,4 @@ Data masking algorithm definition
 | MASK_FROM_X_TO_Y                        | Mask from x to y data masking algorithm                        | [`org.apache.shardingsphere.mask.algorithm.cover.MaskFromXToYMaskAlgorithm`](https://github.com/apache/shardingsphere/blob/master/features/mask/core/src/main/java/org/apache/shardingsphere/mask/algorithm/cover/MaskFromXToYMaskAlgorithm.java)                                           |
 | MASK_BEFORE_SPECIAL_CHARS               | Mask before special chars data masking algorithm               | [`org.apache.shardingsphere.mask.algorithm.cover.MaskBeforeSpecialCharsAlgorithm`](https://github.com/apache/shardingsphere/blob/master/features/mask/core/src/main/java/org/apache/shardingsphere/mask/algorithm/cover/MaskBeforeSpecialCharsAlgorithm.java)                               |
 | MASK_AFTER_SPECIAL_CHARS                | Mask after special chars data masking algorithm                | [`org.apache.shardingsphere.mask.algorithm.cover.MaskAfterSpecialCharsAlgorithm`](https://github.com/apache/shardingsphere/blob/master/features/mask/core/src/main/java/org/apache/shardingsphere/mask/algorithm/cover/MaskAfterSpecialCharsAlgorithm.java)                                 |
-| PERSONAL_IDENTITY_NUMBER_RANDOM_REPLACE | Personal identity number random replace data masking algorithm | [`org.apache.shardingsphere.mask.algorithm.replace.PersonalIdentityNumberRandomReplaceAlgorithm`](https://github.com/apache/shardingsphere/blob/master/features/mask/core/src/main/java/org/apache/shardingsphere/mask/algorithm/replace/PersonalIdentityNumberRandomReplaceAlgorithm.java) |
-| MILITARY_IDENTITY_NUMBER_RANDOM_REPLACE | Military identity number random replace data masking algorithm | [`org.apache.shardingsphere.mask.algorithm.replace.MilitaryIdentityNumberRandomReplaceAlgorithm`](https://github.com/apache/shardingsphere/blob/master/features/mask/core/src/main/java/org/apache/shardingsphere/mask/algorithm/replace/MilitaryIdentityNumberRandomReplaceAlgorithm.java) |
-| TELEPHONE_RANDOM_REPLACE                | Telephone random replace data masking algorithm                | [`org.apache.shardingsphere.mask.algorithm.replace.TelephoneRandomReplaceAlgorithm`](https://github.com/apache/shardingsphere/blob/master/features/mask/core/src/main/java/org/apache/shardingsphere/mask/algorithm/replace/TelephoneRandomReplaceAlgorithm.java)                           |
-| LANDLINE_NUMBER_RANDOM_REPLACE          | Landline number random replace data masking algorithm          | [`org.apache.shardingsphere.mask.algorithm.replace.LandlineNumberRandomAlgorithm`](https://github.com/apache/shardingsphere/blob/master/features/mask/core/src/main/java/org/apache/shardingsphere/mask/algorithm/replace/LandlineNumberRandomAlgorithm.java)                               |
 | GENERIC_TABLE_RANDOM_REPLACE            | Generic table random replace algorithm                         | [`org.apache.shardingsphere.mask.algorithm.replace.GenericTableRandomReplaceAlgorithm`](https://github.com/apache/shardingsphere/blob/master/features/mask/core/src/main/java/org/apache/shardingsphere/mask/algorithm/replace/GenericTableRandomReplaceAlgorithm.java)                     |
-| UNIFIED_CREDIT_CODE_RANDOM_REPLACE      | Unified credit code random replace algorithm                   | [`org.apache.shardingsphere.mask.algorithm.replace.UnifiedCreditCodeRandomReplaceAlgorithm`](https://github.com/apache/shardingsphere/blob/master/features/mask/core/src/main/java/org/apache/shardingsphere/mask/algorithm/replace/UnifiedCreditCodeRandomReplaceAlgorithm.java)           |
diff --git a/docs/document/content/reference/mask/_index.cn.md b/docs/document/content/reference/mask/_index.cn.md
index 3d51efa76ae..8dea432389a 100644
--- a/docs/document/content/reference/mask/_index.cn.md
+++ b/docs/document/content/reference/mask/_index.cn.md
@@ -22,7 +22,7 @@ Apache ShardingSphere 通过对用户查询的 SQL 进行解析，并依据用
 
 **数据源配置**：指数据源配置。
 
-**脱敏算法配置**：指使用什么脱敏算法。目前 ShardingSphere 内置了多种脱敏算法：MD5、KEEP_FIRST_N_LAST_M、KEEP_FROM_X_TO_Y 、MASK_FIRST_N_LAST_M、MASK_FROM_X_TO_Y、MASK_BEFORE_SPECIAL_CHARS、MASK_AFTER_SPECIAL_CHARS、PERSONAL_IDENTITY_NUMBER_RANDOM_REPLACE、MILITARY_IDENTITY_NUMBER_RANDOM_REPLACE 和 TELEPHONE_RANDOM_REPLACE。用户还可以通过实现 ShardingSphere 提供的接口，自行实现一套脱敏算法。
+**脱敏算法配置**：指使用什么脱敏算法。目前 ShardingSphere 内置了多种脱敏算法：MD5、KEEP_FIRST_N_LAST_M、KEEP_FROM_X_TO_Y 、MASK_FIRST_N_LAST_M、MASK_FROM_X_TO_Y、MASK_BEFORE_SPECIAL_CHARS、MASK_AFTER_SPECIAL_CHARS 和 GENERIC_TABLE_RANDOM_REPLACE。用户还可以通过实现 ShardingSphere 提供的接口，自行实现一套脱敏算法。
 
 **脱敏表配置**：用于告诉 ShardingSphere 数据表里哪个列用于数据脱敏、使用什么算法脱敏。
 
diff --git a/docs/document/content/reference/mask/_index.en.md b/docs/document/content/reference/mask/_index.en.md
index 1a869e21061..49110065433 100644
--- a/docs/document/content/reference/mask/_index.en.md
+++ b/docs/document/content/reference/mask/_index.en.md
@@ -22,7 +22,7 @@ Desensitization configuration is mainly divided into three parts: data source co
 
 **Data source configuration**: the configuration of the data source.
 
-**Mask algorithm configuration**: currently, ShardingSphere has a variety of built-in desensitization algorithms: MD5, KEEP_FIRST_N_LAST_M, KEEP_FROM_X_TO_Y , MASK_FIRST_N_LAST_M, MASK_FROM_X_TO_Y, MASK_BEFORE_SPECIAL_CHARS, MASK_AFTER_SPECIAL_CHARS, PERSONAL_IDENTITY_NUMBER_RANDOM_REPLACE, MILITARY_IDENTITY_NUMBER_RANDOM_REPLACE, and TELEPHONE_RANDOM_REPLACE. 
+**Mask algorithm configuration**: currently, ShardingSphere has a variety of built-in desensitization algorithms: MD5, KEEP_FIRST_N_LAST_M, KEEP_FROM_X_TO_Y , MASK_FIRST_N_LAST_M, MASK_FROM_X_TO_Y, MASK_BEFORE_SPECIAL_CHARS, MASK_AFTER_SPECIAL_CHARS and GENERIC_TABLE_RANDOM_REPLACE. 
 
 Users can also implement a set of desensitization algorithms by implementing the interface provided by ShardingSphere.
 
diff --git a/docs/document/content/user-manual/common-config/builtin-algorithm/mask.cn.md b/docs/document/content/user-manual/common-config/builtin-algorithm/mask.cn.md
index 2aa745c5659..7eb51f15321 100644
--- a/docs/document/content/user-manual/common-config/builtin-algorithm/mask.cn.md
+++ b/docs/document/content/user-manual/common-config/builtin-algorithm/mask.cn.md
@@ -95,46 +95,6 @@ weight = 9
 
 ### 替换脱敏算法
 
-#### 身份证随机替换脱敏算法
-
-类型：PERSONAL_IDENTITY_NUMBER_RANDOM_REPLACE
-
-可配置属性：
-
-| *名称*                        | *数据类型* | *说明*                  |
-|-----------------------------|--------|-----------------------|
-| alpha-two-country-area-code | String | 两位字母国家/地区编码（可选，默认：CN） |
-
-#### 军官证随机替换脱敏算法
-
-类型：MILITARY_IDENTITY_NUMBER_RANDOM_REPLACE
-
-可配置属性：
-
-| *名称*       | *数据类型* | *说明*                          |
-|------------|--------|-------------------------------|
-| type-codes | String | 军官证种类编码（以英文逗号分隔，例如：军,人,士,文,职） |
-
-#### 手机号随机替换脱敏算法
-
-类型：TELEPHONE_RANDOM_REPLACE
-
-可配置属性：
-
-| *名称*            | *数据类型* | *说明*                                                                                                                                                                |
-|-----------------|--------|---------------------------------------------------------------------------------------------------------------------------------------------------------------------|
-| network-numbers | String | ⽹号（以英文逗号分隔，默认值：130,131,132,133,134,135,136,137,138,139,150,151,152,153,155,156,157,158,159,166,170,176,177,178,180,181,182,183,184,185,186,187,188,189,191,198,199） |
-
-#### 座机号码随机替换
-
-类型：LANDLINE_NUMBER_RANDOM_REPLACE
-
-可配置属性：
-
-| *名称*             | *数据类型* | *说明*          |
-|------------------|--------|---------------|
-| landline-numbers | String | 座机号码（以英文逗号分隔） |
-
 #### 通⽤表格随机替换
 
 类型：GENERIC_TABLE_RANDOM_REPLACE
@@ -148,18 +108,6 @@ weight = 9
 | digital-codes          | String | 数字码表（以英文逗号分隔，默认值：0,1,2,3,4,5,6,7,8,9）                                   |
 | special-codes          | String | 特殊字符码表（以英文逗号分隔，默认值：~,!,@,#,$,%,^,&,*,:,&lt;,&gt;,&#166;）                |
 
-#### 统⼀信⽤码随机替换
-
-类型：UNIFIED_CREDIT_CODE_RANDOM_REPLACE
-
-可配置属性：
-
-| *名称*                          | *数据类型* | *说明*              |
-|-------------------------------|--------|-------------------|
-| registration-department-codes | String | 登记管理部门代码（以英文逗号分隔） |
-| category-codes                | String | 机构类别代码（以英文逗号分隔）   |
-| administrative-division-codes | String | 行政区划随机码表（以英文逗号分隔） |
-
 ## 操作步骤
 1. 在脱敏规则中配置脱敏算法；
 2. 为脱敏算法指定脱敏算法类型。
diff --git a/docs/document/content/user-manual/common-config/builtin-algorithm/mask.en.md b/docs/document/content/user-manual/common-config/builtin-algorithm/mask.en.md
index 8b493cb4eaa..d29b40d51ca 100644
--- a/docs/document/content/user-manual/common-config/builtin-algorithm/mask.en.md
+++ b/docs/document/content/user-manual/common-config/builtin-algorithm/mask.en.md
@@ -95,46 +95,6 @@ Attributes:
 
 ### Replace Data Masking Algorithm
 
-#### Personal Identity Number Random Replace Data Masking Algorithm
-
-Type: PERSONAL_IDENTITY_NUMBER_RANDOM_REPLACE
-
-Attributes:
-
-| *Name*                      | *DataType* | *Description*                                             |
-|-----------------------------|------------|-----------------------------------------------------------|
-| alpha-two-country-area-code | String     | alpha two country area code (Optional, default value: CN) |
-
-#### Military Identity Number Random Replace Data Masking Algorithm
-
-类型：MILITARY_IDENTITY_NUMBER_RANDOM_REPLACE
-
-可配置属性：
-
-| *Name*                        | *DataType* | *Description*                                              |
-|-------------------------------|------------|------------------------------------------------------------|
-| type-codes                    | String     | military identity number type codes (separate with comma)  |
-
-#### Telephone Random Replace Data Masking Algorithm
-
-Type: TELEPHONE_RANDOM_REPLACE
-
-Attributes:
-
-| *Name*          | *DataType* | *Description*                                                                                                                                                                                             |
-|-----------------|------------|-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|
-| network-numbers | String     | Network numbers (separate with comma, default value: 130,131,132,133,134,135,136,137,138,139,150,151,152,153,155,156,157,158,159,166,170,176,177,178,180,181,182,183,184,185,186,187,188,189,191,198,199) |
-
-#### Landline Number Random Replace Data Masking Algorithm
-
-Type: LANDLINE_NUMBER_RANDOM_REPLACE
-
-Attributes:
-
-| *Name*           | *DataType* | *Description*                          |
-|------------------|------------|----------------------------------------|
-| landline-numbers | String     | Landline numbers (separate with comma) |
-
 #### Generic table random replace algorithm.
 
 Type: GENERIC_TABLE_RANDOM_REPLACE
@@ -148,18 +108,6 @@ Attributes:
 | digital-random-codes   | String     | Numbers (separate with comma, default value: 0,1,2,3,4,5,6,7,8,9)                                                |
 | special-codes          | String     | Special codes (separate with comma, default value: ~,!,@,#,$,%,^,&,*,:,&lt;,&gt;,&#166;)                         |
 
-#### Unified credit code random replace algorithm
-
-Type: UNIFIED_CREDIT_CODE_RANDOM_REPLACE
-
-Attributes:
-
-| *Name*                        | *DataType* | *Description*                                      |
-|-------------------------------|------------|----------------------------------------------------|
-| registration-department-codes | String     | Registration department code (separate with comma) |
-| category-codes                | String     | Category code (separate with comma)                |
-| administrative-division-codes | String     | Administrative division code (separate with comma) |
-
 ## Operating Procedure
 1. Configure maskAlgorithms in a mask rule.
 2. Use relevant algorithm types in maskAlgorithms.
